{
    "number_of_changes": 97,
    "timing": 2.11609148979187,
    "diff_chunks": [
        [
            {
                "lhs": {
                    "line_number": 14,
                    "changes": [
                        {
                            "start": 12,
                            "end": 25,
                            "content": "_createAliana",
                            "highlight": "normal"
                        },
                        {
                            "start": 25,
                            "end": 26,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 26,
                            "end": 27,
                            "content": "0",
                            "highlight": "normal"
                        },
                        {
                            "start": 27,
                            "end": 28,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 29,
                            "end": 30,
                            "content": "0",
                            "highlight": "normal"
                        },
                        {
                            "start": 30,
                            "end": 31,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 32,
                            "end": 33,
                            "content": "0",
                            "highlight": "normal"
                        },
                        {
                            "start": 33,
                            "end": 34,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 35,
                            "end": 42,
                            "content": "address",
                            "highlight": "normal"
                        },
                        {
                            "start": 42,
                            "end": 43,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 43,
                            "end": 47,
                            "content": "this",
                            "highlight": "normal"
                        },
                        {
                            "start": 47,
                            "end": 48,
                            "content": ")",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 48,
                            "end": 49,
                            "content": ")",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 50,
                            "end": 52,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 53,
                            "end": 54,
                            "content": "0",
                            "highlight": "normal"
                        },
                        {
                            "start": 54,
                            "end": 55,
                            "content": ",",
                            "highlight": "normal"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 14,
                    "changes": [
                        {
                            "start": 0,
                            "end": 55,
                            "content": "            _createAliana(0, 0, 0, address(this)) == 0,",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 15,
                    "changes": [
                        {
                            "start": 12,
                            "end": 44,
                            "content": "\"Aliana: card #0 must be my own\"",
                            "highlight": "string"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 15,
                    "changes": [
                        {
                            "start": 0,
                            "end": 44,
                            "content": "            \"Aliana: card #0 must be my own\"",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 16,
                    "changes": [
                        {
                            "start": 8,
                            "end": 9,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 16,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "        ); */",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 11,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 25,
                            "content": "_geneAddr",
                            "highlight": "normal"
                        },
                        {
                            "start": 25,
                            "end": 26,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 26,
                            "end": 39,
                            "content": "isGeneScience",
                            "highlight": "normal"
                        },
                        {
                            "start": 39,
                            "end": 40,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 40,
                            "end": 41,
                            "content": ")",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 41,
                            "end": 42,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 43,
                            "end": 72,
                            "content": "\"Aliana: isGeneScience false\"",
                            "highlight": "string"
                        },
                        {
                            "start": 72,
                            "end": 73,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 11,
                    "changes": [
                        {
                            "start": 8,
                            "end": 80,
                            "content": "/* require(_geneAddr.isGeneScience(), \"Aliana: isGeneScience false\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 13,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 13,
                    "changes": [
                        {
                            "start": 8,
                            "end": 19,
                            "content": "/* require(",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ],
        [
            {
                "lhs": {
                    "line_number": 32,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 32,
                    "changes": [
                        {
                            "start": 8,
                            "end": 19,
                            "content": "/* require(",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 33,
                    "changes": [
                        {
                            "start": 12,
                            "end": 21,
                            "content": "_matronId",
                            "highlight": "normal"
                        },
                        {
                            "start": 22,
                            "end": 24,
                            "content": "!=",
                            "highlight": "keyword"
                        },
                        {
                            "start": 25,
                            "end": 32,
                            "content": "_sireId",
                            "highlight": "normal"
                        },
                        {
                            "start": 32,
                            "end": 33,
                            "content": ",",
                            "highlight": "normal"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 33,
                    "changes": [
                        {
                            "start": 0,
                            "end": 33,
                            "content": "            _matronId != _sireId,",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 34,
                    "changes": [
                        {
                            "start": 12,
                            "end": 57,
                            "content": "\"Aliana: only different aliana can be merged\"",
                            "highlight": "string"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 34,
                    "changes": [
                        {
                            "start": 0,
                            "end": 57,
                            "content": "            \"Aliana: only different aliana can be merged\"",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 36,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 23,
                            "content": "ownerOf",
                            "highlight": "normal"
                        },
                        {
                            "start": 23,
                            "end": 24,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 24,
                            "end": 33,
                            "content": "_matronId",
                            "highlight": "normal"
                        },
                        {
                            "start": 33,
                            "end": 34,
                            "content": ")",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 35,
                            "end": 37,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 38,
                            "end": 41,
                            "content": "msg",
                            "highlight": "normal"
                        },
                        {
                            "start": 41,
                            "end": 42,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 42,
                            "end": 48,
                            "content": "sender",
                            "highlight": "normal"
                        },
                        {
                            "start": 48,
                            "end": 49,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 50,
                            "end": 77,
                            "content": "\"Aliana: must be the owner\"",
                            "highlight": "string"
                        },
                        {
                            "start": 77,
                            "end": 78,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 36,
                    "changes": [
                        {
                            "start": 8,
                            "end": 85,
                            "content": "/* require(ownerOf(_matronId) == msg.sender, \"Aliana: must be the owner\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 37,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 23,
                            "content": "ownerOf",
                            "highlight": "normal"
                        },
                        {
                            "start": 23,
                            "end": 24,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 24,
                            "end": 31,
                            "content": "_sireId",
                            "highlight": "normal"
                        },
                        {
                            "start": 31,
                            "end": 32,
                            "content": ")",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 33,
                            "end": 35,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 36,
                            "end": 39,
                            "content": "msg",
                            "highlight": "normal"
                        },
                        {
                            "start": 39,
                            "end": 40,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 40,
                            "end": 46,
                            "content": "sender",
                            "highlight": "normal"
                        },
                        {
                            "start": 46,
                            "end": 47,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 48,
                            "end": 75,
                            "content": "\"Aliana: must be the owner\"",
                            "highlight": "string"
                        },
                        {
                            "start": 75,
                            "end": 76,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 37,
                    "changes": [
                        {
                            "start": 8,
                            "end": 83,
                            "content": "/* require(ownerOf(_sireId) == msg.sender, \"Aliana: must be the owner\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 35,
                    "changes": [
                        {
                            "start": 8,
                            "end": 9,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 35,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "        ); */",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ],
        [
            {
                "lhs": {
                    "line_number": 45,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 22,
                            "content": "matron",
                            "highlight": "normal"
                        },
                        {
                            "start": 22,
                            "end": 23,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 23,
                            "end": 32,
                            "content": "birthTime",
                            "highlight": "normal"
                        },
                        {
                            "start": 33,
                            "end": 35,
                            "content": "!=",
                            "highlight": "keyword"
                        },
                        {
                            "start": 36,
                            "end": 37,
                            "content": "0",
                            "highlight": "normal"
                        },
                        {
                            "start": 37,
                            "end": 38,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 39,
                            "end": 75,
                            "content": "\"Aliana: matron birthTime not valid\"",
                            "highlight": "string"
                        },
                        {
                            "start": 75,
                            "end": 76,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 45,
                    "changes": [
                        {
                            "start": 8,
                            "end": 83,
                            "content": "/* require(matron.birthTime != 0, \"Aliana: matron birthTime not valid\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            },
            {
                "lhs": {
                    "line_number": 48,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 20,
                            "content": "sire",
                            "highlight": "normal"
                        },
                        {
                            "start": 20,
                            "end": 21,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 21,
                            "end": 30,
                            "content": "birthTime",
                            "highlight": "normal"
                        },
                        {
                            "start": 31,
                            "end": 33,
                            "content": "!=",
                            "highlight": "keyword"
                        },
                        {
                            "start": 34,
                            "end": 35,
                            "content": "0",
                            "highlight": "normal"
                        },
                        {
                            "start": 35,
                            "end": 36,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 37,
                            "end": 71,
                            "content": "\"Aliana: sire birthTime not valid\"",
                            "highlight": "string"
                        },
                        {
                            "start": 71,
                            "end": 72,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 48,
                    "changes": [
                        {
                            "start": 8,
                            "end": 79,
                            "content": "/* require(sire.birthTime != 0, \"Aliana: sire birthTime not valid\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ],
        [
            {
                "lhs": {
                    "line_number": 78,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 23,
                            "content": "ownerOf",
                            "highlight": "normal"
                        },
                        {
                            "start": 23,
                            "end": 24,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 24,
                            "end": 32,
                            "content": "_tokenID",
                            "highlight": "normal"
                        },
                        {
                            "start": 32,
                            "end": 33,
                            "content": ")",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 34,
                            "end": 36,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 37,
                            "end": 40,
                            "content": "msg",
                            "highlight": "normal"
                        },
                        {
                            "start": 40,
                            "end": 41,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 41,
                            "end": 47,
                            "content": "sender",
                            "highlight": "normal"
                        },
                        {
                            "start": 47,
                            "end": 48,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 49,
                            "end": 76,
                            "content": "\"Aliana: must be the owner\"",
                            "highlight": "string"
                        },
                        {
                            "start": 76,
                            "end": 77,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 78,
                    "changes": [
                        {
                            "start": 8,
                            "end": 84,
                            "content": "/* require(ownerOf(_tokenID) == msg.sender, \"Aliana: must be the owner\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ]
    ]
}