{
    "number_of_changes": 28,
    "timing": 0.7622671127319336,
    "diff_chunks": [
        [
            {
                "lhs": {
                    "line_number": 68,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 28,
                            "content": "storageState",
                            "highlight": "normal"
                        },
                        {
                            "start": 29,
                            "end": 31,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 32,
                            "end": 44,
                            "content": "StorageState",
                            "highlight": "normal"
                        },
                        {
                            "start": 44,
                            "end": 45,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 45,
                            "end": 56,
                            "content": "Initialised",
                            "highlight": "normal"
                        },
                        {
                            "start": 56,
                            "end": 57,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 58,
                            "end": 89,
                            "content": "\"Storage state not initialised\"",
                            "highlight": "string"
                        },
                        {
                            "start": 89,
                            "end": 90,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 68,
                    "changes": [
                        {
                            "start": 8,
                            "end": 97,
                            "content": "/* require(storageState == StorageState.Initialised, \"Storage state not initialised\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ],
        [
            {
                "lhs": {
                    "line_number": 73,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 28,
                            "content": "storageState",
                            "highlight": "normal"
                        },
                        {
                            "start": 29,
                            "end": 31,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 32,
                            "end": 44,
                            "content": "StorageState",
                            "highlight": "normal"
                        },
                        {
                            "start": 44,
                            "end": 45,
                            "content": ".",
                            "highlight": "normal"
                        },
                        {
                            "start": 45,
                            "end": 58,
                            "content": "Uninitialised",
                            "highlight": "normal"
                        },
                        {
                            "start": 58,
                            "end": 59,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 60,
                            "end": 95,
                            "content": "\"Storage state already initialised\"",
                            "highlight": "string"
                        },
                        {
                            "start": 95,
                            "end": 96,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 73,
                    "changes": [
                        {
                            "start": 8,
                            "end": 103,
                            "content": "/* require(storageState == StorageState.Uninitialised, \"Storage state already initialised\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ],
        [
            {
                "lhs": {
                    "line_number": 79,
                    "changes": [
                        {
                            "start": 8,
                            "end": 15,
                            "content": "require",
                            "highlight": "normal"
                        },
                        {
                            "start": 15,
                            "end": 16,
                            "content": "(",
                            "highlight": "delimiter"
                        },
                        {
                            "start": 16,
                            "end": 28,
                            "content": "_nodeAddress",
                            "highlight": "normal"
                        },
                        {
                            "start": 29,
                            "end": 31,
                            "content": "==",
                            "highlight": "keyword"
                        },
                        {
                            "start": 32,
                            "end": 43,
                            "content": "nodeAddress",
                            "highlight": "normal"
                        },
                        {
                            "start": 43,
                            "end": 44,
                            "content": ",",
                            "highlight": "normal"
                        },
                        {
                            "start": 45,
                            "end": 69,
                            "content": "\"Invalid minipool owner\"",
                            "highlight": "string"
                        },
                        {
                            "start": 69,
                            "end": 70,
                            "content": ")",
                            "highlight": "delimiter"
                        }
                    ]
                },
                "rhs": {
                    "line_number": 79,
                    "changes": [
                        {
                            "start": 8,
                            "end": 77,
                            "content": "/* require(_nodeAddress == nodeAddress, \"Invalid minipool owner\"); */",
                            "highlight": "comment"
                        }
                    ]
                }
            }
        ]
    ]
}