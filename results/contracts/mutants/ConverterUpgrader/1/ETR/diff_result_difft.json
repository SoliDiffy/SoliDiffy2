{
    "number_of_changes": 250,
    "timing": 0.7515819072723389,
    "diff_chunks": [
        [
            {
                "rhs": {
                    "line_number": 410,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 494,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "            if (reserveAddress == ETH_RESERVE_ADDRESS) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 331,
                    "changes": [
                        {
                            "start": 0,
                            "end": 112,
                            "content": "    constructor(IContractRegistry _registry, IEtherToken _etherToken) ContractRegistryClient(_registry) public {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 332,
                    "changes": [
                        {
                            "start": 0,
                            "end": 33,
                            "content": "        etherToken = _etherToken;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 430,
                    "changes": [
                        {
                            "start": 0,
                            "end": 24,
                            "content": "            newType = 1;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 532,
                    "changes": [
                        {
                            "start": 0,
                            "end": 89,
                            "content": "                uint256 balance = oldConverter.reserveStakedBalance(reserveTokenAddress);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 300,
                    "changes": [
                        {
                            "start": 0,
                            "end": 80,
                            "content": "  * The address of the new converter is available in the ConverterUpgrade event.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 462,
                    "changes": [
                        {
                            "start": 0,
                            "end": 18,
                            "content": "            else {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 399,
                    "changes": [
                        {
                            "start": 0,
                            "end": 91,
                            "content": "      * the upgrader contract then needs to accept the ownership transfer before initiating",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 319,
                    "changes": [
                        {
                            "start": 0,
                            "end": 57,
                            "content": "      * @dev triggered when the upgrading process is done",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 499,
                    "changes": [
                        {
                            "start": 0,
                            "end": 78,
                            "content": "                reserveBalance = etherToken.balanceOf(address(_oldConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 460,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 548,
                    "changes": [
                        {
                            "start": 0,
                            "end": 41,
                            "content": "            // activate the new converter",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 357,
                    "changes": [
                        {
                            "start": 0,
                            "end": 55,
                            "content": "    function upgrade(uint16 _version) public override {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 473,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 520,
                    "changes": [
                        {
                            "start": 0,
                            "end": 51,
                            "content": "        if (!isV28OrHigherConverter(_oldConverter))",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 437,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 349,
                    "changes": [
                        {
                            "start": 0,
                            "end": 60,
                            "content": "      * @dev upgrades an old converter to the latest version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 294,
                    "changes": [
                        {
                            "start": 0,
                            "end": 93,
                            "content": "  * The converter upgrader contract allows upgrading an older converter contract (0.4 and up)",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 436,
                    "changes": [
                        {
                            "start": 0,
                            "end": 25,
                            "content": "        return converter;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 512,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 374,
                    "changes": [
                        {
                            "start": 0,
                            "end": 44,
                            "content": "        acceptConverterOwnership(converter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 450,
                    "changes": [
                        {
                            "start": 0,
                            "end": 74,
                            "content": "            IERC20Token reserveAddress = _oldConverter.connectorTokens(i);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 552,
                    "changes": [
                        {
                            "start": 0,
                            "end": 107,
                            "content": "            DynamicLiquidTokenConverter oldConverter = DynamicLiquidTokenConverter(address(_oldConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 305,
                    "changes": [
                        {
                            "start": 0,
                            "end": 2,
                            "content": "*/",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 386,
                    "changes": [
                        {
                            "start": 0,
                            "end": 49,
                            "content": "            newConverter.acceptAnchorOwnership();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 328,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 288,
                    "changes": [
                        {
                            "start": 0,
                            "end": 45,
                            "content": "import \"../token/interfaces/IEtherToken.sol\";",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 514,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 540,
                    "changes": [
                        {
                            "start": 0,
                            "end": 44,
                            "content": "            // get the primary reserve token",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 447,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "        uint16 reserveTokenCount = _oldConverter.connectorTokenCount();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 457,
                    "changes": [
                        {
                            "start": 0,
                            "end": 34,
                            "content": "            // Ether reserve token",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 301,
                    "changes": [
                        {
                            "start": 0,
                            "end": 3,
                            "content": "  *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 323,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 491,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "        for (uint16 i = 0; i < reserveTokenCount; i++) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 385,
                    "changes": [
                        {
                            "start": 0,
                            "end": 68,
                            "content": "            converter.transferTokenOwnership(address(newConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 353,
                    "changes": [
                        {
                            "start": 0,
                            "end": 41,
                            "content": "      * can only be called by a converter",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 369,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 306,
                    "changes": [
                        {
                            "start": 0,
                            "end": 74,
                            "content": "contract ConverterUpgrader is IConverterUpgrader, ContractRegistryClient {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 384,
                    "changes": [
                        {
                            "start": 0,
                            "end": 51,
                            "content": "        if (anchor.owner() == address(converter)) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 290,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "import \"./types/liquid-token/DynamicLiquidTokenConverter.sol\";",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 477,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 425,
                    "changes": [
                        {
                            "start": 0,
                            "end": 65,
                            "content": "        // new converter - get the type from the converter itself",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 543,
                    "changes": [
                        {
                            "start": 0,
                            "end": 46,
                            "content": "            // get the chainlink price oracles",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 461,
                    "changes": [
                        {
                            "start": 0,
                            "end": 34,
                            "content": "            // ERC20 reserve token",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 337,
                    "changes": [
                        {
                            "start": 0,
                            "end": 96,
                            "content": "      * will throw if ownership wasn't transferred to the upgrader before calling this function.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 363,
                    "changes": [
                        {
                            "start": 0,
                            "end": 96,
                            "content": "      * will throw if ownership wasn't transferred to the upgrader before calling this function.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 529,
                    "changes": [
                        {
                            "start": 0,
                            "end": 60,
                            "content": "            for (uint16 i = 0; i < reserveTokenCount; i++) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 287,
                    "changes": [
                        {
                            "start": 0,
                            "end": 101,
                            "content": "        (bool success, bytes memory returnData) = address(_converter).call{gas: 4000}(data)list.sol\";",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 415,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 420,
                    "changes": [
                        {
                            "start": 0,
                            "end": 67,
                            "content": "        uint32 maxConversionFee = _oldConverter.maxConversionFee();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 354,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 459,
                    "changes": [
                        {
                            "start": 0,
                            "end": 70,
                            "content": "                _newConverter.addReserve(ETH_RESERVE_ADDRESS, weight);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 408,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 458,
                    "changes": [
                        {
                            "start": 0,
                            "end": 52,
                            "content": "            else if (reserveAddress == etherToken) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 395,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 492,
                    "changes": [
                        {
                            "start": 0,
                            "end": 74,
                            "content": "            IERC20Token reserveAddress = _oldConverter.connectorTokens(i);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 519,
                    "changes": [
                        {
                            "start": 0,
                            "end": 113,
                            "content": "    function handleTypeSpecificData(IConverter _oldConverter, IConverter _newConverter, bool _activate) private {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 292,
                    "changes": [
                        {
                            "start": 0,
                            "end": 27,
                            "content": "  * @dev Converter Upgrader",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 429,
                    "changes": [
                        {
                            "start": 0,
                            "end": 39,
                            "content": "        else if (reserveTokenCount > 1)",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 549,
                    "changes": [
                        {
                            "start": 0,
                            "end": 73,
                            "content": "            newConverter.activate(primaryReserveToken, oracleA, oracleB);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 324,
                    "changes": [
                        {
                            "start": 0,
                            "end": 89,
                            "content": "    event ConverterUpgrade(address indexed _oldConverter, address indexed _newConverter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 413,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 376,
                    "changes": [
                        {
                            "start": 0,
                            "end": 46,
                            "content": "        copyReserves(converter, newConverter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 440,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "      * @dev copies the reserves from the old converter to the new one.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 538,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 468,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 351,
                    "changes": [
                        {
                            "start": 0,
                            "end": 86,
                            "content": "      * ownership of the new converter will be transferred back to the original owner.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 456,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 421,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "        uint16 reserveTokenCount = _oldConverter.connectorTokenCount();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 445,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 414,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _oldConverter    old converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 320,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 304,
                    "changes": [
                        {
                            "start": 0,
                            "end": 73,
                            "content": "  * and then the upgrader 'upgrade' function should be executed directly.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 343,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 348,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 397,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 498,
                    "changes": [
                        {
                            "start": 0,
                            "end": 52,
                            "content": "            else if (reserveAddress == etherToken) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 291,
                    "changes": [
                        {
                            "start": 0,
                            "end": 3,
                            "content": "/**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 474,
                    "changes": [
                        {
                            "start": 0,
                            "end": 92,
                            "content": "    function copyConversionFee(IConverter _oldConverter, IConverter _newConverter) private {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 524,
                    "changes": [
                        {
                            "start": 0,
                            "end": 33,
                            "content": "        if (converterType == 2) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 329,
                    "changes": [
                        {
                            "start": 0,
                            "end": 67,
                            "content": "      * @param _registry    address of a contract registry contract",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 371,
                    "changes": [
                        {
                            "start": 0,
                            "end": 17,
                            "content": "        _version;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 381,
                    "changes": [
                        {
                            "start": 0,
                            "end": 66,
                            "content": "        // get the activation status before it's being invalidated",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 454,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "            if (reserveAddress == ETH_RESERVE_ADDRESS) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 525,
                    "changes": [
                        {
                            "start": 0,
                            "end": 103,
                            "content": "            ILiquidityPoolV2Converter oldConverter = ILiquidityPoolV2Converter(address(_oldConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 469,
                    "changes": [
                        {
                            "start": 0,
                            "end": 76,
                            "content": "      * @dev copies the conversion fee from the old converter to the new one",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 497,
                    "changes": [
                        {
                            "start": 0,
                            "end": 34,
                            "content": "            // Ether reserve token",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 296,
                    "changes": [
                        {
                            "start": 0,
                            "end": 72,
                            "content": "  * To begin the upgrade process, simply execute the 'upgrade' function.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 298,
                    "changes": [
                        {
                            "start": 0,
                            "end": 106,
                            "content": "  * back to the original owner and the original owner will need to execute the 'acceptOwnership' function.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 463,
                    "changes": [
                        {
                            "start": 0,
                            "end": 65,
                            "content": "                _newConverter.addReserve(reserveAddress, weight);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 480,
                    "changes": [
                        {
                            "start": 0,
                            "end": 87,
                            "content": "      * @dev transfers the balance of each reserve in the old converter to the new one.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 528,
                    "changes": [
                        {
                            "start": 0,
                            "end": 74,
                            "content": "            uint16 reserveTokenCount = oldConverter.connectorTokenCount();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 333,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 508,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 501,
                    "changes": [
                        {
                            "start": 0,
                            "end": 78,
                            "content": "                etherToken.withdrawTo(address(_newConverter), reserveBalance);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 307,
                    "changes": [
                        {
                            "start": 0,
                            "end": 111,
                            "content": "    IERC20Token private constant ETH_RESERVE_ADDRESS = IERC20Token(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 537,
                    "changes": [
                        {
                            "start": 0,
                            "end": 23,
                            "content": "                return;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 455,
                    "changes": [
                        {
                            "start": 0,
                            "end": 70,
                            "content": "                _newConverter.addReserve(ETH_RESERVE_ADDRESS, weight);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 485,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _newConverter    new converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 500,
                    "changes": [
                        {
                            "start": 0,
                            "end": 88,
                            "content": "                _oldConverter.withdrawTokens(etherToken, address(this), reserveBalance);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 533,
                    "changes": [
                        {
                            "start": 0,
                            "end": 83,
                            "content": "                newConverter.setReserveStakedBalance(reserveTokenAddress, balance);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 359,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 526,
                    "changes": [
                        {
                            "start": 0,
                            "end": 103,
                            "content": "            ILiquidityPoolV2Converter newConverter = ILiquidityPoolV2Converter(address(_newConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 391,
                    "changes": [
                        {
                            "start": 0,
                            "end": 47,
                            "content": "        converter.transferOwnership(prevOwner);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 505,
                    "changes": [
                        {
                            "start": 0,
                            "end": 55,
                            "content": "                IERC20Token connector = reserveAddress;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 297,
                    "changes": [
                        {
                            "start": 0,
                            "end": 96,
                            "content": "  * At the end of the process, the ownership of the newly upgraded converter will be transferred",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 375,
                    "changes": [
                        {
                            "start": 0,
                            "end": 61,
                            "content": "        IConverter newConverter = createConverter(converter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 340,
                    "changes": [
                        {
                            "start": 0,
                            "end": 41,
                            "content": "      * can only be called by a converter",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 496,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 487,
                    "changes": [
                        {
                            "start": 0,
                            "end": 98,
                            "content": "    function transferReserveBalances(IConverter _oldConverter, IConverter _newConverter) private {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 366,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 536,
                    "changes": [
                        {
                            "start": 0,
                            "end": 29,
                            "content": "            if (!_activate) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 295,
                    "changes": [
                        {
                            "start": 0,
                            "end": 26,
                            "content": "  * to the latest version.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 352,
                    "changes": [
                        {
                            "start": 0,
                            "end": 54,
                            "content": "      * fires the ConverterUpgrade event upon success.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 389,
                    "changes": [
                        {
                            "start": 0,
                            "end": 66,
                            "content": "        handleTypeSpecificData(converter, newConverter, activate);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 382,
                    "changes": [
                        {
                            "start": 0,
                            "end": 82,
                            "content": "        bool activate = isV28OrHigherConverter(converter) && converter.isActive();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 403,
                    "changes": [
                        {
                            "start": 0,
                            "end": 67,
                            "content": "      * @param _oldConverter       converter to accept ownership of",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 433,
                    "changes": [
                        {
                            "start": 0,
                            "end": 109,
                            "content": "        IConverter converter = converterFactory.createConverter(newType, anchor, registry, maxConversionFee);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 372,
                    "changes": [
                        {
                            "start": 0,
                            "end": 54,
                            "content": "        IConverter converter = IConverter(_converter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 444,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _newConverter    new converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 449,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "        for (uint16 i = 0; i < reserveTokenCount; i++) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 321,
                    "changes": [
                        {
                            "start": 0,
                            "end": 53,
                            "content": "      * @param _oldConverter    old converter address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 392,
                    "changes": [
                        {
                            "start": 0,
                            "end": 50,
                            "content": "        newConverter.transferOwnership(prevOwner);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 401,
                    "changes": [
                        {
                            "start": 0,
                            "end": 51,
                            "content": "      * fires the ConverterOwned event upon success",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 507,
                    "changes": [
                        {
                            "start": 0,
                            "end": 96,
                            "content": "                _oldConverter.withdrawTokens(connector, address(_newConverter), reserveBalance);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 541,
                    "changes": [
                        {
                            "start": 0,
                            "end": 81,
                            "content": "            IERC20Token primaryReserveToken = oldConverter.primaryReserveToken();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 358,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "        upgradeOld(IConverter(msg.sender), bytes32(uint256(_version)));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 428,
                    "changes": [
                        {
                            "start": 0,
                            "end": 115,
                            "content": "        // old converter - if it has 1 reserve token, the type is a liquid token, otherwise the type liquidity pool",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 362,
                    "changes": [
                        {
                            "start": 0,
                            "end": 60,
                            "content": "      * @dev upgrades an old converter to the latest version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 545,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "            IChainlinkPriceOracle oracleA = priceOracle.tokenAOracle();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 504,
                    "changes": [
                        {
                            "start": 0,
                            "end": 18,
                            "content": "            else {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 400,
                    "changes": [
                        {
                            "start": 0,
                            "end": 28,
                            "content": "      * the upgrade process.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 418,
                    "changes": [
                        {
                            "start": 0,
                            "end": 85,
                            "content": "    function createConverter(IConverter _oldConverter) private returns (IConverter) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 365,
                    "changes": [
                        {
                            "start": 0,
                            "end": 54,
                            "content": "      * fires the ConverterUpgrade event upon success.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 394,
                    "changes": [
                        {
                            "start": 0,
                            "end": 73,
                            "content": "        emit ConverterUpgrade(address(converter), address(newConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 471,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _oldConverter    old converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 441,
                    "changes": [
                        {
                            "start": 0,
                            "end": 108,
                            "content": "      * note that this will not work for an unlimited number of reserves due to block gas limit constraints.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 502,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 416,
                    "changes": [
                        {
                            "start": 0,
                            "end": 65,
                            "content": "      * @return the new converter  new converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 465,
                    "changes": [
                        {
                            "start": 0,
                            "end": 9,
                            "content": "        }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 350,
                    "changes": [
                        {
                            "start": 0,
                            "end": 96,
                            "content": "      * will throw if ownership wasn't transferred to the upgrader before calling this function.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 553,
                    "changes": [
                        {
                            "start": 0,
                            "end": 107,
                            "content": "            DynamicLiquidTokenConverter newConverter = DynamicLiquidTokenConverter(address(_newConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 364,
                    "changes": [
                        {
                            "start": 0,
                            "end": 86,
                            "content": "      * ownership of the new converter will be transferred back to the original owner.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 517,
                    "changes": [
                        {
                            "start": 0,
                            "end": 58,
                            "content": "      * @param _activate        activate the new converter",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 518,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 503,
                    "changes": [
                        {
                            "start": 0,
                            "end": 34,
                            "content": "            // ERC20 reserve token",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 566,
                    "changes": [
                        {
                            "start": 0,
                            "end": 89,
                            "content": "    function isV28OrHigherConverter(IConverter _converter) internal view returns (bool) {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 404,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 373,
                    "changes": [
                        {
                            "start": 0,
                            "end": 46,
                            "content": "        address prevOwner = converter.owner();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 424,
                    "changes": [
                        {
                            "start": 0,
                            "end": 27,
                            "content": "        uint16 newType = 0;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 472,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _newConverter    new converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 406,
                    "changes": [
                        {
                            "start": 0,
                            "end": 40,
                            "content": "        _oldConverter.acceptOwnership();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 442,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 405,
                    "changes": [
                        {
                            "start": 0,
                            "end": 73,
                            "content": "    function acceptConverterOwnership(IConverter _oldConverter) private {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 557,
                    "changes": [
                        {
                            "start": 0,
                            "end": 82,
                            "content": "            newConverter.setMarketCapThreshold(oldConverter.marketCapThreshold());",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 470,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 530,
                    "changes": [
                        {
                            "start": 0,
                            "end": 46,
                            "content": "                // copy reserve staked balance",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 378,
                    "changes": [
                        {
                            "start": 0,
                            "end": 57,
                            "content": "        transferReserveBalances(converter, newConverter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 312,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 554,
                    "changes": [
                        {
                            "start": 0,
                            "end": 12,
                            "content": "            ",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 439,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 330,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 407,
                    "changes": [
                        {
                            "start": 0,
                            "end": 58,
                            "content": "        emit ConverterOwned(_oldConverter, address(this));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 483,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 493,
                    "changes": [
                        {
                            "start": 0,
                            "end": 28,
                            "content": "            // Ether reserve",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 411,
                    "changes": [
                        {
                            "start": 0,
                            "end": 87,
                            "content": "      * @dev creates a new converter with same basic data as the original old converter",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 486,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 327,
                    "changes": [
                        {
                            "start": 0,
                            "end": 57,
                            "content": "      * @dev initializes a new ConverterUpgrader instance",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 356,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 326,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 523,
                    "changes": [
                        {
                            "start": 0,
                            "end": 61,
                            "content": "        uint16 converterType = _oldConverter.converterType();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 303,
                    "changes": [
                        {
                            "start": 0,
                            "end": 100,
                            "content": "  * be transferred manually to the ConverterUpgrader contract using the 'transferOwnership' function",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 412,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "      * the newly created converter will have no reserves at this step.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 417,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 482,
                    "changes": [
                        {
                            "start": 0,
                            "end": 104,
                            "content": "      * also, this will not work for an unlimited number of reserves due to block gas limit constraints.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 318,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 355,
                    "changes": [
                        {
                            "start": 0,
                            "end": 45,
                            "content": "      * @param _version old converter version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 379,
                    "changes": [
                        {
                            "start": 0,
                            "end": 52,
                            "content": "        IConverterAnchor anchor = converter.token();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 531,
                    "changes": [
                        {
                            "start": 0,
                            "end": 82,
                            "content": "                IERC20Token reserveTokenAddress = oldConverter.connectorTokens(i);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 289,
                    "changes": [
                        {
                            "start": 0,
                            "end": 76,
                            "content": "import \"./types/liquidity-pool-v2/interfaces/ILiquidityPoolV2Converter.sol\";",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 550,
                    "changes": [
                        {
                            "start": 0,
                            "end": 9,
                            "content": "        }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 308,
                    "changes": [
                        {
                            "start": 0,
                            "end": 34,
                            "content": "    IEtherToken public etherToken;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 555,
                    "changes": [
                        {
                            "start": 0,
                            "end": 72,
                            "content": "            newConverter.setMinimumWeight(oldConverter.minimumWeight());",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 546,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "            IChainlinkPriceOracle oracleB = priceOracle.tokenBOracle();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 302,
                    "changes": [
                        {
                            "start": 0,
                            "end": 101,
                            "content": "  * Note that for older converters that don't yet have the 'upgrade' function, ownership should first",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 558,
                    "changes": [
                        {
                            "start": 0,
                            "end": 104,
                            "content": "            newConverter.setLastWeightAdjustmentMarketCap(oldConverter.lastWeightAdjustmentMarketCap());",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 453,
                    "changes": [
                        {
                            "start": 0,
                            "end": 28,
                            "content": "            // Ether reserve",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 509,
                    "changes": [
                        {
                            "start": 0,
                            "end": 9,
                            "content": "        }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 559,
                    "changes": [
                        {
                            "start": 0,
                            "end": 9,
                            "content": "        }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 293,
                    "changes": [
                        {
                            "start": 0,
                            "end": 3,
                            "content": "  *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 313,
                    "changes": [
                        {
                            "start": 0,
                            "end": 45,
                            "content": "      * @param _converter   converter address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 475,
                    "changes": [
                        {
                            "start": 0,
                            "end": 61,
                            "content": "        uint32 conversionFee = _oldConverter.conversionFee();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 488,
                    "changes": [
                        {
                            "start": 0,
                            "end": 31,
                            "content": "        uint256 reserveBalance;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 339,
                    "changes": [
                        {
                            "start": 0,
                            "end": 54,
                            "content": "      * fires the ConverterUpgrade event upon success.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 346,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 314,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _owner       new owner - local upgrader address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 564,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "    // using a static call to identify converter version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 506,
                    "changes": [
                        {
                            "start": 0,
                            "end": 77,
                            "content": "                reserveBalance = connector.balanceOf(address(_oldConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 481,
                    "changes": [
                        {
                            "start": 0,
                            "end": 98,
                            "content": "      * note that the function assumes that the new converter already has the exact same number of",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 423,
                    "changes": [
                        {
                            "start": 0,
                            "end": 39,
                            "content": "        // determine new converter type",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 551,
                    "changes": [
                        {
                            "start": 0,
                            "end": 64,
                            "content": "        if(converterType == 3){ //Dynamic Liquid Token Converter",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 464,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 479,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 560,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 534,
                    "changes": [
                        {
                            "start": 0,
                            "end": 13,
                            "content": "            }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 341,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 443,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _oldConverter    old converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 476,
                    "changes": [
                        {
                            "start": 0,
                            "end": 54,
                            "content": "        _newConverter.setConversionFee(conversionFee);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 299,
                    "changes": [
                        {
                            "start": 0,
                            "end": 3,
                            "content": "  *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 387,
                    "changes": [
                        {
                            "start": 0,
                            "end": 9,
                            "content": "        }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 432,
                    "changes": [
                        {
                            "start": 0,
                            "end": 93,
                            "content": "        IConverterFactory converterFactory = IConverterFactory(addressOf(CONVERTER_FACTORY));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 336,
                    "changes": [
                        {
                            "start": 0,
                            "end": 60,
                            "content": "      * @dev upgrades an old converter to the latest version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 544,
                    "changes": [
                        {
                            "start": 0,
                            "end": 66,
                            "content": "            IPriceOracle priceOracle = oldConverter.priceOracle();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 315,
                    "changes": [
                        {
                            "start": 0,
                            "end": 6,
                            "content": "    */",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 402,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "      *",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 426,
                    "changes": [
                        {
                            "start": 0,
                            "end": 50,
                            "content": "        if (isV28OrHigherConverter(_oldConverter))",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 316,
                    "changes": [
                        {
                            "start": 0,
                            "end": 80,
                            "content": "    event ConverterOwned(IConverter indexed _converter, address indexed _owner);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 322,
                    "changes": [
                        {
                            "start": 0,
                            "end": 53,
                            "content": "      * @param _newConverter    new converter address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 556,
                    "changes": [
                        {
                            "start": 0,
                            "end": 66,
                            "content": "            newConverter.setStepWeight(oldConverter.stepWeight());",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 451,
                    "changes": [
                        {
                            "start": 0,
                            "end": 79,
                            "content": "            (, uint32 weight, , , ) = _oldConverter.connectors(reserveAddress);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 335,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 515,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _oldConverter    old converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 344,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "    function upgrade(bytes32 _version) public override {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 495,
                    "changes": [
                        {
                            "start": 0,
                            "end": 66,
                            "content": "                _oldConverter.withdrawETH(address(_newConverter));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 310,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 484,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _oldConverter    old converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 419,
                    "changes": [
                        {
                            "start": 0,
                            "end": 56,
                            "content": "        IConverterAnchor anchor = _oldConverter.token();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 342,
                    "changes": [
                        {
                            "start": 0,
                            "end": 45,
                            "content": "      * @param _version old converter version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 367,
                    "changes": [
                        {
                            "start": 0,
                            "end": 58,
                            "content": "      * @param _converter   old converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 565,
                    "changes": [
                        {
                            "start": 0,
                            "end": 104,
                            "content": "    // can't rely on the version number since the function had a different signature in older converters",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 377,
                    "changes": [
                        {
                            "start": 0,
                            "end": 51,
                            "content": "        copyConversionFee(converter, newConverter);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 398,
                    "changes": [
                        {
                            "start": 0,
                            "end": 106,
                            "content": "      * @dev the first step when upgrading a converter is to transfer the ownership to the local contract.",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 510,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 435,
                    "changes": [
                        {
                            "start": 0,
                            "end": 36,
                            "content": "        converter.acceptOwnership();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 311,
                    "changes": [
                        {
                            "start": 0,
                            "end": 69,
                            "content": "      * @dev triggered when the contract accept a converter ownership",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 516,
                    "changes": [
                        {
                            "start": 0,
                            "end": 62,
                            "content": "      * @param _newConverter    new converter contract address",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 345,
                    "changes": [
                        {
                            "start": 0,
                            "end": 53,
                            "content": "        upgradeOld(IConverter(msg.sender), _version);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 370,
                    "changes": [
                        {
                            "start": 0,
                            "end": 73,
                            "content": "    function upgradeOld(IConverter _converter, bytes32 _version) public {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 567,
                    "changes": [
                        {
                            "start": 0,
                            "end": 83,
                            "content": "        bytes memory data = abi.encodeWithSelector(IS_V28_OR_HIGHER_FUNC_SELECTOR);",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 368,
                    "changes": [
                        {
                            "start": 0,
                            "end": 49,
                            "content": "      * @param _version     old converter version",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 427,
                    "changes": [
                        {
                            "start": 0,
                            "end": 52,
                            "content": "            newType = _oldConverter.converterType();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 489,
                    "changes": [
                        {
                            "start": 0,
                            "end": 71,
                            "content": "        uint16 reserveTokenCount = _oldConverter.connectorTokenCount();",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 513,
                    "changes": [
                        {
                            "start": 0,
                            "end": 96,
                            "content": "      * @dev handles upgrading custom (type specific) data from the old converter to the new one",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 562,
                    "changes": [
                        {
                            "start": 0,
                            "end": 98,
                            "content": "    bytes4 private constant IS_V28_OR_HIGHER_FUNC_SELECTOR = bytes4(keccak256(\"isV28OrHigher()\"));",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 521,
                    "changes": [
                        {
                            "start": 0,
                            "end": 19,
                            "content": "            return;",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 361,
                    "changes": [
                        {
                            "start": 0,
                            "end": 7,
                            "content": "    /**",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 466,
                    "changes": [
                        {
                            "start": 0,
                            "end": 5,
                            "content": "    }",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 446,
                    "changes": [
                        {
                            "start": 0,
                            "end": 87,
                            "content": "    function copyReserves(IConverter _oldConverter, IConverter _newConverter) private {",
                            "highlight": "normal"
                        }
                    ]
                }
            },
            {
                "rhs": {
                    "line_number": 338,
                    "changes": [
                        {
                            "start": 0,
                            "end": 86,
                            "content": "      * ownership of the new converter will be transferred back to the original owner.",
                            "highlight": "normal"
                        }
                    ]
                }
            }
        ]
    ]
}