{
    "number_of_edits": 7,
    "timing": 7.082123041152954,
    "edit_script": "<actions>\n  <insert-node tree=\"identifier: PerpetualManagerFront [892,913]\" parent=\"contract_declaration [883,30008]\" at=\"0\" />\n  <insert-node tree=\"is: is [914,916]\" parent=\"contract_declaration [883,30008]\" at=\"1\" />\n  <update-node tree=\"member_expression: block.timestamp [6540,6555]\" label=\"block.number\" />\n  <update-node tree=\"member_expression: block.timestamp [8869,8884]\" label=\"block.number\" />\n  <update-node tree=\"member_expression: (perpetual.entryTimestamp + lockTime &lt;= block.timestamp) &amp;&amp;                     // The amount to withdraw should not be more important than the perpetual's `cashOutAmount` and `margin`                     (amount &lt; cashOutAmount) &amp;&amp;                     (amount &lt; perpetual.margin) &amp;&amp;                     // Withdrawing collateral should not make the leverage of the perpetual too important                     // Checking both on `cashOutAmount` and `perpetual.margin` (as we can have either                     // `cashOutAmount &gt;= perpetual.margin` or `cashOutAmount&lt;perpetual.margin`)                     // No checks are done on `maintenanceMargin`, as conditions on `maxLeverage` are more restrictive                     perpetual.committedAmount * BASE_PARAMS &lt;= (cashOutAmount - amount) * maxLeverage &amp;&amp;                     perpetual.committedAmount [12202,13058]\" label=\"(perpetual.entryTimestamp + lockTime &lt;= block.number) &amp;&amp;                     // The amount to withdraw should not be more important than the perpetual's `cashOutAmount` and `margin`                     (amount &lt; cashOutAmount) &amp;&amp;                     (amount &lt; perpetual.margin) &amp;&amp;                     // Withdrawing collateral should not make the leverage of the perpetual too important                     // Checking both on `cashOutAmount` and `perpetual.margin` (as we can have either                     // `cashOutAmount &gt;= perpetual.margin` or `cashOutAmount&lt;perpetual.margin`)                     // No checks are done on `maintenanceMargin`, as conditions on `maxLeverage` are more restrictive                     perpetual.committedAmount * BASE_PARAMS &lt;= (cashOutAmount - amount) * maxLeverage &amp;&amp;                     perpetual.committedAmount\" />\n  <delete-node tree=\"identifier: PerpetualManagerFront [892,913]\" />\n  <delete-node tree=\"is: is [914,916]\" />\n</actions>\n"
}