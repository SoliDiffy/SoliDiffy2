diff --git a/contracts/test/TestHooksImpl.sol b/contracts/test/TestHooksImpl.sol
index da76e590..28266de7 100644
--- a/contracts/test/TestHooksImpl.sol
+++ b/contracts/test/TestHooksImpl.sol
@@ -1,9 +1,9 @@
 // SPDX-License-Identifier: UNLICENSED
 pragma solidity =0.8.19;
 
-import {Hooks} from "../libraries/Hooks.sol";
-import {IHooks} from "../interfaces/IHooks.sol";
-import {IPoolManager} from "../interfaces/IPoolManager.sol";
+import {Hooks} from '../libraries/Hooks.sol';
+import {IHooks} from '../interfaces/IHooks.sol';
+import {IPoolManager} from '../interfaces/IPoolManager.sol';
 
 contract EmptyTestHooks is IHooks {
     using Hooks for IHooks;
@@ -27,21 +27,20 @@ contract EmptyTestHooks is IHooks {
         return IHooks.beforeInitialize.selector;
     }
 
-    function afterInitialize(address, IPoolManager.PoolKey memory, uint160, int24)
-        external
-        pure
-        override
-        returns (bytes4)
-    {
+    function afterInitialize(
+        address,
+        IPoolManager.PoolKey memory,
+        uint160,
+        int24
+    ) external pure override returns (bytes4) {
         return IHooks.afterInitialize.selector;
     }
 
-    function beforeModifyPosition(address, IPoolManager.PoolKey calldata, IPoolManager.ModifyPositionParams calldata)
-        external
-        pure
-        override
-        returns (bytes4)
-    {
+    function beforeModifyPosition(
+        address,
+        IPoolManager.PoolKey calldata,
+        IPoolManager.ModifyPositionParams calldata
+    ) external pure override returns (bytes4) {
         return IHooks.beforeModifyPosition.selector;
     }
 
@@ -54,12 +53,11 @@ contract EmptyTestHooks is IHooks {
         return IHooks.afterModifyPosition.selector;
     }
 
-    function beforeSwap(address, IPoolManager.PoolKey calldata, IPoolManager.SwapParams calldata)
-        external
-        pure
-        override
-        returns (bytes4)
-    {
+    function beforeSwap(
+        address,
+        IPoolManager.PoolKey calldata,
+        IPoolManager.SwapParams calldata
+    ) external pure override returns (bytes4) {
         return IHooks.beforeSwap.selector;
     }
 
@@ -72,21 +70,21 @@ contract EmptyTestHooks is IHooks {
         return IHooks.afterSwap.selector;
     }
 
-    function beforeDonate(address, IPoolManager.PoolKey calldata, uint256, uint256)
-        external
-        pure
-        override
-        returns (bytes4)
-    {
+    function beforeDonate(
+        address,
+        IPoolManager.PoolKey calldata,
+        uint256,
+        uint256
+    ) external pure override returns (bytes4) {
         return IHooks.beforeDonate.selector;
     }
 
-    function afterDonate(address, IPoolManager.PoolKey calldata, uint256, uint256)
-        external
-        pure
-        override
-        returns (bytes4)
-    {
+    function afterDonate(
+        address,
+        IPoolManager.PoolKey calldata,
+        uint256,
+        uint256
+    ) external pure override returns (bytes4) {
         return IHooks.afterDonate.selector;
     }
 }
