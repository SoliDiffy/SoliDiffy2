diff --git a/contracts/test/SwapMathEchidnaTest.sol b/contracts/test/SwapMathEchidnaTest.sol
index ce097009..97329e31 100644
--- a/contracts/test/SwapMathEchidnaTest.sol
+++ b/contracts/test/SwapMathEchidnaTest.sol
@@ -2,15 +2,9 @@
 pragma solidity =0.7.6;
 
 import '../libraries/FixedPoint128.sol';
-import '../libraries/SqrtTickMath.sol';
 import '../libraries/SwapMath.sol';
 
 contract SwapMathEchidnaTest {
-    function requirePriceWithinBounds(uint160 price) private pure {
-        require(price < SqrtTickMath.getSqrtRatioAtTick(SqrtTickMath.MAX_TICK)._x);
-        require(price >= SqrtTickMath.getSqrtRatioAtTick(SqrtTickMath.MIN_TICK)._x);
-    }
-
     function checkComputeSwapStepInvariants(
         uint160 sqrtPriceRaw,
         uint160 sqrtPriceTargetRaw,
@@ -18,8 +12,8 @@ contract SwapMathEchidnaTest {
         int256 amount,
         uint24 feePips
     ) external pure {
-        requirePriceWithinBounds(sqrtPriceRaw);
-        requirePriceWithinBounds(sqrtPriceTargetRaw);
+        require(sqrtPriceRaw > 0);
+        require(sqrtPriceTargetRaw > 0);
         require(feePips > 0);
         require(feePips < 1e6);
 
@@ -37,6 +31,11 @@ contract SwapMathEchidnaTest {
             zeroForOne
         );
 
+        if (sqrtPriceRaw != sqrtPriceTargetRaw) {
+            assert(feeAmount > 0);
+            // amountIn is not necessarily gt 0, the entire amount in can be taken as a fee
+        }
+
         if (zeroForOne) {
             assert(sqrtQ._x <= sqrtPriceRaw);
             assert(sqrtQ._x >= sqrtPriceTargetRaw);
