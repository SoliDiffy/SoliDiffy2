diff --git a/contracts/test/PoolSwapTest.sol b/contracts/test/PoolSwapTest.sol
index 2c82abcc..1e870fed 100644
--- a/contracts/test/PoolSwapTest.sol
+++ b/contracts/test/PoolSwapTest.sol
@@ -6,6 +6,8 @@ import {IERC20Minimal} from '../interfaces/external/IERC20Minimal.sol';
 import {ILockCallback} from '../interfaces/callback/ILockCallback.sol';
 import {IPoolManager} from '../interfaces/IPoolManager.sol';
 
+import {Pool} from '../libraries/Pool.sol';
+
 contract PoolSwapTest is ILockCallback {
     IPoolManager public immutable manager;
 
@@ -21,12 +23,9 @@ contract PoolSwapTest is ILockCallback {
 
     function swap(IPoolManager.PoolKey memory key, IPoolManager.SwapParams memory params)
         external
-        returns (IPoolManager.BalanceDelta memory delta)
+        returns (Pool.BalanceDelta memory delta)
     {
-        delta = abi.decode(
-            manager.lock(abi.encode(CallbackData(msg.sender, key, params))),
-            (IPoolManager.BalanceDelta)
-        );
+        delta = abi.decode(manager.lock(abi.encode(CallbackData(msg.sender, key, params))), (Pool.BalanceDelta));
     }
 
     function lockAcquired(bytes calldata rawData) external returns (bytes memory) {
@@ -34,7 +33,7 @@ contract PoolSwapTest is ILockCallback {
 
         CallbackData memory data = abi.decode(rawData, (CallbackData));
 
-        IPoolManager.BalanceDelta memory delta = manager.swap(data.key, data.params);
+        Pool.BalanceDelta memory delta = manager.swap(data.key, data.params);
 
         if (data.params.zeroForOne) {
             if (delta.amount0 > 0) {
