diff --git a/contracts/libraries/Pool.sol b/contracts/libraries/Pool.sol
index f59b6e00..78565dca 100644
--- a/contracts/libraries/Pool.sol
+++ b/contracts/libraries/Pool.sol
@@ -32,9 +32,6 @@ library Pool {
     /// @param tickUpper The invalid tickUpper
     error TickUpperOutOfBounds(int24 tickUpper);
 
-    /// @notice For the tick spacing, the tick has too much liquidity
-    error TickLiquidityOverflow(int24 tick);
-
     /// @notice Thrown when interacting with an uninitialized tick that must be initialized
     /// @param tick The uninitialized tick
     error TickNotInitialized(int24 tick);
@@ -102,15 +99,15 @@ library Pool {
         int24 tickUpper;
         // any change in liquidity
         int128 liquidityDelta;
+        // the max liquidity per tick
+        uint128 maxLiquidityPerTick;
         // the spacing between ticks
         int24 tickSpacing;
     }
 
     struct ModifyPositionState {
         bool flippedLower;
-        uint128 liquidityGrossAfterLower;
         bool flippedUpper;
-        uint128 liquidityGrossAfterUpper;
         uint256 feeGrowthInside0X128;
         uint256 feeGrowthInside1X128;
     }
@@ -130,31 +127,25 @@ library Pool {
             ModifyPositionState memory state;
             // if we need to update the ticks, do it
             if (params.liquidityDelta != 0) {
-                (state.flippedLower, state.liquidityGrossAfterLower) = self.ticks.update(
+                state.flippedLower = self.ticks.update(
                     params.tickLower,
                     self.slot0.tick,
                     params.liquidityDelta,
                     self.feeGrowthGlobal0X128,
                     self.feeGrowthGlobal1X128,
-                    false
+                    false,
+                    params.maxLiquidityPerTick
                 );
-                (state.flippedUpper, state.liquidityGrossAfterUpper) = self.ticks.update(
+                state.flippedUpper = self.ticks.update(
                     params.tickUpper,
                     self.slot0.tick,
                     params.liquidityDelta,
                     self.feeGrowthGlobal0X128,
                     self.feeGrowthGlobal1X128,
-                    true
+                    true,
+                    params.maxLiquidityPerTick
                 );
 
-                if (params.liquidityDelta > 0) {
-                    uint128 maxLiquidityPerTick = Tick.tickSpacingToMaxLiquidityPerTick(params.tickSpacing);
-                    if (state.liquidityGrossAfterLower > maxLiquidityPerTick)
-                        revert TickLiquidityOverflow(params.tickLower);
-                    if (state.liquidityGrossAfterUpper > maxLiquidityPerTick)
-                        revert TickLiquidityOverflow(params.tickUpper);
-                }
-
                 if (state.flippedLower) {
                     self.tickBitmap.flipTick(params.tickLower, params.tickSpacing);
                 }
