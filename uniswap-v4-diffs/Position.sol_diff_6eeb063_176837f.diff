diff --git a/contracts/libraries/Position.sol b/contracts/libraries/Position.sol
index af8fa9a9..373e7515 100644
--- a/contracts/libraries/Position.sol
+++ b/contracts/libraries/Position.sol
@@ -1,5 +1,5 @@
 // SPDX-License-Identifier: BUSL-1.1
-pragma solidity ^0.8.9;
+pragma solidity >=0.5.0;
 
 import './FullMath.sol';
 import './FixedPoint128.sol';
@@ -47,34 +47,32 @@ library Position {
         uint256 feeGrowthInside0X128,
         uint256 feeGrowthInside1X128
     ) internal {
-        unchecked {
-            Info memory _self = self;
+        Info memory _self = self;
 
-            uint128 liquidityNext;
-            if (liquidityDelta == 0) {
-                require(_self.liquidity > 0, 'NP'); // disallow pokes for 0 liquidity positions
-                liquidityNext = _self.liquidity;
-            } else {
-                liquidityNext = LiquidityMath.addDelta(_self.liquidity, liquidityDelta);
-            }
+        uint128 liquidityNext;
+        if (liquidityDelta == 0) {
+            require(_self.liquidity > 0, 'NP'); // disallow pokes for 0 liquidity positions
+            liquidityNext = _self.liquidity;
+        } else {
+            liquidityNext = LiquidityMath.addDelta(_self.liquidity, liquidityDelta);
+        }
 
-            // calculate accumulated fees
-            uint128 tokensOwed0 = uint128(
+        // calculate accumulated fees
+        uint128 tokensOwed0 = uint128(
             FullMath.mulDiv(feeGrowthInside0X128 - _self.feeGrowthInside0LastX128, _self.liquidity, FixedPoint128.Q128)
         );
-            uint128 tokensOwed1 = uint128(
+        uint128 tokensOwed1 = uint128(
             FullMath.mulDiv(feeGrowthInside1X128 - _self.feeGrowthInside1LastX128, _self.liquidity, FixedPoint128.Q128)
         );
 
-            // update the position
-            if (liquidityDelta != 0) self.liquidity = liquidityNext;
-            self.feeGrowthInside0LastX128 = feeGrowthInside0X128;
-            self.feeGrowthInside1LastX128 = feeGrowthInside1X128;
-            if (tokensOwed0 > 0 || tokensOwed1 > 0) {
-                // overflow is acceptable, have to withdraw before you hit type(uint128).max fees
-                self.tokensOwed0 += tokensOwed0;
-                self.tokensOwed1 += tokensOwed1;
-            }
+        // update the position
+        if (liquidityDelta != 0) self.liquidity = liquidityNext;
+        self.feeGrowthInside0LastX128 = feeGrowthInside0X128;
+        self.feeGrowthInside1LastX128 = feeGrowthInside1X128;
+        if (tokensOwed0 > 0 || tokensOwed1 > 0) {
+            // overflow is acceptable, have to withdraw before you hit type(uint128).max fees
+            self.tokensOwed0 += tokensOwed0;
+            self.tokensOwed1 += tokensOwed1;
         }
     }
 }
