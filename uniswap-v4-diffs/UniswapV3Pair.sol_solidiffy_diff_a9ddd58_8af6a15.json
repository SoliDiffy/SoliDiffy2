{"number_of_edits": 218, "edit_script": "<actions>\n  <insert-tree tree=\"import_directive [717,760]\" parent=\"source_file [0,31267]\" at=\"15\" />\n  <insert-node tree=\"identifier: UniswapV3Pair [854,867]\" parent=\"contract_declaration [845,31267]\" at=\"0\" />\n  <insert-node tree=\"is: is [868,870]\" parent=\"contract_declaration [845,31267]\" at=\"1\" />\n  <insert-node tree=\"function_definition [15331,15710]\" parent=\"contract_body [886,31267]\" at=\"48\" />\n  <move-tree tree=\"modifier_invocation [16461,16465]\" parent=\"function_definition [10611,11297]\" at=\"5\" />\n  <insert-node tree=\"function: function [15331,15339]\" parent=\"function_definition [15331,15710]\" at=\"0\" />\n  <insert-node tree=\"identifier: _transferDelta [15340,15354]\" parent=\"function_definition [15331,15710]\" at=\"1\" />\n  <insert-tree tree=\"parameter [15364,15377]\" parent=\"function_definition [15331,15710]\" at=\"2\" />\n  <insert-tree tree=\"parameter [15387,15397]\" parent=\"function_definition [15331,15710]\" at=\"3\" />\n  <insert-tree tree=\"parameter [15407,15419]\" parent=\"function_definition [15331,15710]\" at=\"4\" />\n  <insert-node tree=\"visibility: private [15426,15433]\" parent=\"function_definition [15331,15710]\" at=\"5\" />\n  <insert-node tree=\"function_body [15434,15710]\" parent=\"function_definition [15331,15710]\" at=\"6\" />\n  <update-node tree=\"visibility: public [16445,16451]\" label=\"external\" />\n  <insert-tree tree=\"struct_member [18655,18666]\" parent=\"struct_declaration [18597,18753]\" at=\"3\" />\n  <insert-tree tree=\"struct_member [21464,21475]\" parent=\"struct_declaration [21094,21481]\" at=\"6\" />\n  <insert-tree tree=\"parameter [28881,28900]\" parent=\"function_definition [28806,29181]\" at=\"4\" />\n  <insert-tree tree=\"parameter [29329,29348]\" parent=\"function_definition [29254,29642]\" at=\"4\" />\n  <insert-node tree=\"if_statement [15444,15704]\" parent=\"function_body [15434,15710]\" at=\"0\" />\n  <update-node tree=\"identifier: recipient [15264,15273]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [16355,16364]\" label=\"owner\" />\n  <update-node tree=\"type_name: uint128 [16424,16431]\" label=\"uint256\" />\n  <insert-node tree=\"return_statement [17657,17707]\" parent=\"function_body [17016,17713]\" at=\"7\" />\n  <update-node tree=\"identifier: recipient [17881,17890]\" label=\"to\" />\n  <update-node tree=\"type_name: uint128 [17950,17957]\" label=\"uint256\" />\n  <insert-node tree=\"expression_statement [18483,18524]\" parent=\"function_body [17894,18591]\" at=\"6\" />\n  <insert-node tree=\"return_statement [18533,18585]\" parent=\"function_body [17894,18591]\" at=\"7\" />\n  <move-tree tree=\"expression_statement [18699,18755]\" parent=\"function_body [19154,21088]\" at=\"3\" />\n  <move-tree tree=\"expression_statement [18781,18837]\" parent=\"function_body [19154,21088]\" at=\"4\" />\n  <update-node tree=\"identifier: recipient [21377,21386]\" label=\"to\" />\n  <insert-node tree=\"expression_statement [28088,28175]\" parent=\"function_body [23028,28733]\" at=\"5\" />\n  <insert-node tree=\"if_statement [28184,28454]\" parent=\"function_body [23028,28733]\" at=\"6\" />\n  <move-tree tree=\"expression_statement [28680,28865]\" parent=\"function_body [23028,28733]\" at=\"7\" />\n  <update-node tree=\"identifier: recipient [29000,29009]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [29418,29427]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [29781,29790]\" label=\"to\" />\n  <insert-node tree=\"call_expression [11045,11290]\" parent=\"expression_statement [11045,11291]\" at=\"0\" />\n  <insert-node tree=\"if: if [15444,15446]\" parent=\"if_statement [15444,15704]\" at=\"0\" />\n  <insert-tree tree=\"binary_expression [15448,15457]\" parent=\"if_statement [15444,15704]\" at=\"1\" />\n  <insert-node tree=\"block_statement [15459,15603]\" parent=\"if_statement [15444,15704]\" at=\"2\" />\n  <insert-node tree=\"else: else [15604,15608]\" parent=\"if_statement [15444,15704]\" at=\"3\" />\n  <insert-tree tree=\"if_statement [15609,15704]\" parent=\"if_statement [15444,15704]\" at=\"4\" />\n  <insert-node tree=\"call_expression [17607,17647]\" parent=\"expression_statement [17607,17648]\" at=\"0\" />\n  <insert-node tree=\"return: return [17657,17663]\" parent=\"return_statement [17657,17707]\" at=\"0\" />\n  <insert-node tree=\"tuple_expression [17664,17706]\" parent=\"return_statement [17657,17707]\" at=\"1\" />\n  <insert-node tree=\"call_expression [18483,18523]\" parent=\"expression_statement [18483,18524]\" at=\"0\" />\n  <insert-node tree=\"return: return [18533,18539]\" parent=\"return_statement [18533,18585]\" at=\"0\" />\n  <insert-node tree=\"tuple_expression [18540,18584]\" parent=\"return_statement [18533,18585]\" at=\"1\" />\n  <insert-node tree=\"call_expression [28088,28174]\" parent=\"expression_statement [28088,28175]\" at=\"0\" />\n  <insert-node tree=\"if: if [28184,28186]\" parent=\"if_statement [28184,28454]\" at=\"0\" />\n  <insert-node tree=\"binary_expression [28188,28210]\" parent=\"if_statement [28184,28454]\" at=\"1\" />\n  <insert-node tree=\"block_statement [28212,28454]\" parent=\"if_statement [28184,28454]\" at=\"2\" />\n  <insert-node tree=\"identifier: _setPosition [11045,11057]\" parent=\"call_expression [11045,11290]\" at=\"0\" />\n  <insert-node tree=\"call_argument [11071,11280]\" parent=\"call_expression [11045,11290]\" at=\"1\" />\n  <insert-node tree=\"expression_statement [15473,15498]\" parent=\"block_statement [15459,15603]\" at=\"0\" />\n  <insert-node tree=\"expression_statement [15511,15593]\" parent=\"block_statement [15459,15603]\" at=\"1\" />\n  <update-node tree=\"identifier: amount0 [17071,17078]\" label=\"assert\" />\n  <move-tree tree=\"identifier: amount0 [17071,17078]\" parent=\"call_expression [17607,17647]\" at=\"0\" />\n  <insert-tree tree=\"call_argument [17614,17646]\" parent=\"call_expression [17607,17647]\" at=\"1\" />\n  <move-tree tree=\"type_cast_expression [17081,17100]\" parent=\"tuple_expression [17664,17706]\" at=\"0\" />\n  <move-tree tree=\"type_cast_expression [17120,17139]\" parent=\"tuple_expression [17664,17706]\" at=\"1\" />\n  <insert-node tree=\"identifier: assert [18483,18489]\" parent=\"call_expression [18483,18523]\" at=\"0\" />\n  <insert-node tree=\"call_argument [18490,18522]\" parent=\"call_expression [18483,18523]\" at=\"1\" />\n  <move-tree tree=\"type_cast_expression [18611,18631]\" parent=\"tuple_expression [18540,18584]\" at=\"0\" />\n  <move-tree tree=\"type_cast_expression [18651,18671]\" parent=\"tuple_expression [18540,18584]\" at=\"1\" />\n  <insert-node tree=\"identifier: _transferDelta [20987,21001]\" parent=\"call_expression [20987,21029]\" at=\"0\" />\n  <insert-node tree=\"identifier: _transferDelta [21039,21053]\" parent=\"call_expression [21039,21081]\" at=\"0\" />\n  <insert-node tree=\"member_expression: TransferHelper.safeTransfer [28088,28115]\" parent=\"call_expression [28088,28174]\" at=\"0\" />\n  <insert-node tree=\"call_argument [28116,28151]\" parent=\"call_expression [28088,28174]\" at=\"1\" />\n  <move-tree tree=\"call_argument [28161,28177]\" parent=\"call_expression [28088,28174]\" at=\"2\" />\n  <insert-tree tree=\"call_argument [28164,28173]\" parent=\"call_expression [28088,28174]\" at=\"3\" />\n  <update-node tree=\"member_expression: IERC20(tokenIn).balanceOf [28227,28252]\" label=\"params.data.length\" />\n  <move-tree tree=\"member_expression: IERC20(tokenIn).balanceOf [28227,28252]\" parent=\"binary_expression [28188,28210]\" at=\"0\" />\n  <insert-node tree=\"comparison_operator: &gt; [28207,28208]\" parent=\"binary_expression [28188,28210]\" at=\"1\" />\n  <insert-node tree=\"number_literal: 0 [28209,28210]\" parent=\"binary_expression [28188,28210]\" at=\"2\" />\n  <move-tree tree=\"expression_statement [28281,28667]\" parent=\"block_statement [28212,28454]\" at=\"0\" />\n  <insert-node tree=\"member_expression: TransferHelper.safeTransferFrom [28556,28587]\" parent=\"call_expression [28556,28726]\" at=\"0\" />\n  <insert-node tree=\"call_argument [28601,28636]\" parent=\"call_expression [28556,28726]\" at=\"1\" />\n  <insert-node tree=\"call_argument [28650,28660]\" parent=\"call_expression [28556,28726]\" at=\"2\" />\n  <move-tree tree=\"call_argument [28769,28782]\" parent=\"call_expression [28556,28726]\" at=\"3\" />\n  <move-tree tree=\"call_expression [11096,11135]\" parent=\"call_argument [11071,11280]\" at=\"0\" />\n  <insert-node tree=\"call_expression [15473,15497]\" parent=\"expression_statement [15473,15498]\" at=\"0\" />\n  <insert-node tree=\"call_expression [15511,15592]\" parent=\"expression_statement [15511,15593]\" at=\"0\" />\n  <insert-node tree=\"binary_expression [18490,18522]\" parent=\"call_argument [18490,18522]\" at=\"0\" />\n  <insert-node tree=\"member_expression: params.to [21010,21019]\" parent=\"call_argument [21010,21019]\" at=\"0\" />\n  <insert-node tree=\"member_expression: params.to [21062,21071]\" parent=\"call_argument [21062,21071]\" at=\"0\" />\n  <move-tree tree=\"ternary_expression [28054,28109]\" parent=\"call_argument [28116,28151]\" at=\"0\" />\n  <update-node tree=\"member_expression: params.recipient [28161,28177]\" label=\"params.to\" />\n  <insert-node tree=\"ternary_expression [28601,28636]\" parent=\"call_argument [28601,28636]\" at=\"0\" />\n  <update-node tree=\"member_expression: balanceBefore.add(params.amountIn) &gt;= IERC20(tokenIn).balanceOf [28705,28768]\" label=\"msg.sender\" />\n  <move-tree tree=\"member_expression: balanceBefore.add(params.amountIn) &gt;= IERC20(tokenIn).balanceOf [28705,28768]\" parent=\"call_argument [28650,28660]\" at=\"0\" />\n  <insert-node tree=\"member_expression: params.amountIn [28701,28716]\" parent=\"call_argument [28701,28716]\" at=\"0\" />\n  <update-node tree=\"identifier: recipient [30143,30152]\" label=\"to\" />\n  <update-node tree=\"identifier: mint [11096,11100]\" label=\"SetPositionParams\" />\n  <insert-node tree=\"call_argument [11089,11279]\" parent=\"call_expression [11071,11280]\" at=\"1\" />\n  <insert-node tree=\"identifier: assert [15473,15479]\" parent=\"call_expression [15473,15497]\" at=\"0\" />\n  <move-tree tree=\"call_argument [11101,11111]\" parent=\"call_expression [15473,15497]\" at=\"1\" />\n  <insert-node tree=\"member_expression: TransferHelper.safeTransferFrom [15511,15542]\" parent=\"call_expression [15511,15592]\" at=\"0\" />\n  <insert-tree tree=\"call_argument [15543,15548]\" parent=\"call_expression [15511,15592]\" at=\"1\" />\n  <insert-tree tree=\"call_argument [15550,15560]\" parent=\"call_expression [15511,15592]\" at=\"2\" />\n  <move-tree tree=\"call_argument [17548,17561]\" parent=\"call_expression [15511,15592]\" at=\"3\" />\n  <insert-tree tree=\"call_argument [15577,15591]\" parent=\"call_expression [15511,15592]\" at=\"4\" />\n  <update-node tree=\"identifier: recipient [16210,16219]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [16292,16301]\" label=\"to\" />\n  <insert-node tree=\"binary_expression [18490,18504]\" parent=\"binary_expression [18490,18522]\" at=\"0\" />\n  <insert-node tree=\"logical_operator: || [18505,18507]\" parent=\"binary_expression [18490,18522]\" at=\"1\" />\n  <insert-tree tree=\"binary_expression [18508,18522]\" parent=\"binary_expression [18490,18522]\" at=\"2\" />\n  <move-tree tree=\"identifier: token1 [28083,28089]\" parent=\"ternary_expression [28116,28151]\" at=\"2\" />\n  <move-tree tree=\"identifier: token0 [28102,28108]\" parent=\"ternary_expression [28116,28151]\" at=\"5\" />\n  <update-node tree=\"member_expression: params.zeroForOne                 ? IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(                     -params.amountIn.toInt256(),                     amountOut.toInt256()                 )                 : IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback [28281,28557]\" label=\"params.zeroForOne                 ? IUniswapV3Callee(params.to).swap0For1Callback(msg.sender, amountOut, params.data)                 : IUniswapV3Callee(params.to).swap1For0Callback\" />\n  <move-tree tree=\"call_argument [28179,28188]\" parent=\"call_expression [28226,28443]\" at=\"2\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [28601,28618]\" parent=\"ternary_expression [28601,28636]\" at=\"0\" />\n  <insert-node tree=\"?: ? [28619,28620]\" parent=\"ternary_expression [28601,28636]\" at=\"1\" />\n  <update-node tree=\"identifier: require [28680,28687]\" label=\"token0\" />\n  <move-tree tree=\"identifier: require [28680,28687]\" parent=\"ternary_expression [28601,28636]\" at=\"2\" />\n  <insert-node tree=\":: : [28628,28629]\" parent=\"ternary_expression [28601,28636]\" at=\"3\" />\n  <insert-node tree=\"identifier: token1 [28630,28636]\" parent=\"ternary_expression [28601,28636]\" at=\"4\" />\n  <insert-tree tree=\"call_struct_argument [11107,11124]\" parent=\"call_argument [11089,11279]\" at=\"0\" />\n  <insert-tree tree=\"call_struct_argument [11142,11156]\" parent=\"call_argument [11089,11279]\" at=\"1\" />\n  <insert-node tree=\"call_struct_argument [11174,11193]\" parent=\"call_argument [11089,11279]\" at=\"2\" />\n  <insert-node tree=\"call_struct_argument [11211,11230]\" parent=\"call_argument [11089,11279]\" at=\"3\" />\n  <insert-node tree=\"call_struct_argument [11248,11265]\" parent=\"call_argument [11089,11279]\" at=\"4\" />\n  <insert-node tree=\"binary_expression [15480,15496]\" parent=\"call_argument [15480,15496]\" at=\"0\" />\n  <insert-tree tree=\"call_struct_argument [17354,17368]\" parent=\"call_argument [17306,17520]\" at=\"1\" />\n  <insert-tree tree=\"call_struct_argument [18237,18243]\" parent=\"call_argument [18184,18396]\" at=\"1\" />\n  <update-node tree=\"identifier: amount0 [18601,18608]\" label=\"amount0Int\" />\n  <move-tree tree=\"identifier: amount0 [18601,18608]\" parent=\"binary_expression [18490,18504]\" at=\"0\" />\n  <insert-node tree=\"comparison_operator: &lt; [18501,18502]\" parent=\"binary_expression [18490,18504]\" at=\"1\" />\n  <insert-node tree=\"number_literal: 0 [18503,18504]\" parent=\"binary_expression [18490,18504]\" at=\"2\" />\n  <update-node tree=\"member_expression: amountOut.toInt256 [28579,28597]\" label=\"msg.sender\" />\n  <move-tree tree=\"member_expression: amountOut.toInt256 [28579,28597]\" parent=\"call_argument [28408,28418]\" at=\"0\" />\n  <update-node tree=\"member_expression: -params.amountIn.toInt256 [28621,28646]\" label=\"params.data\" />\n  <move-tree tree=\"member_expression: -params.amountIn.toInt256 [28621,28646]\" parent=\"call_argument [28431,28442]\" at=\"0\" />\n  <insert-tree tree=\"call_struct_argument [29161,29171]\" parent=\"call_argument [29087,29172]\" at=\"4\" />\n  <insert-tree tree=\"call_struct_argument [29622,29632]\" parent=\"call_argument [29547,29633]\" at=\"4\" />\n  <insert-node tree=\"identifier: tickLower [11174,11183]\" parent=\"call_struct_argument [11174,11193]\" at=\"0\" />\n  <insert-node tree=\":: : [11183,11184]\" parent=\"call_struct_argument [11174,11193]\" at=\"1\" />\n  <move-tree tree=\"identifier: MIN_TICK [11113,11121]\" parent=\"call_struct_argument [11174,11193]\" at=\"2\" />\n  <insert-node tree=\"identifier: tickUpper [11211,11220]\" parent=\"call_struct_argument [11211,11230]\" at=\"0\" />\n  <insert-node tree=\":: : [11220,11221]\" parent=\"call_struct_argument [11211,11230]\" at=\"1\" />\n  <move-tree tree=\"identifier: MAX_TICK [11123,11131]\" parent=\"call_struct_argument [11211,11230]\" at=\"2\" />\n  <insert-node tree=\"identifier: liquidityDelta [11248,11262]\" parent=\"call_struct_argument [11248,11265]\" at=\"0\" />\n  <insert-node tree=\":: : [11262,11263]\" parent=\"call_struct_argument [11248,11265]\" at=\"1\" />\n  <move-tree tree=\"number_literal: 1 [11133,11134]\" parent=\"call_struct_argument [11248,11265]\" at=\"2\" />\n  <insert-node tree=\"identifier: to [15480,15482]\" parent=\"binary_expression [15480,15496]\" at=\"0\" />\n  <insert-node tree=\"comparison_operator: == [15483,15485]\" parent=\"binary_expression [15480,15496]\" at=\"1\" />\n  <move-tree tree=\"type_cast_expression [11101,11111]\" parent=\"binary_expression [15480,15496]\" at=\"2\" />\n  <update-node tree=\"identifier: recipient [16824,16833]\" label=\"owner\" />\n  <update-node tree=\"identifier: recipient [29269,29278]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [29280,29289]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [29688,29697]\" label=\"to\" />\n  <update-node tree=\"identifier: recipient [29699,29708]\" label=\"to\" />\n  <update-node tree=\"member_expression: int256(amount).toInt128 [16943,16966]\" label=\"amount.toInt256().toInt128\" />\n  <update-node tree=\"member_expression: -int256(amount).toInt128 [18472,18496]\" label=\"-amount.toInt256().toInt128\" />\n  <delete-tree tree=\"import_directive [717,766]\" />\n  <delete-tree tree=\"import_directive [767,816]\" />\n  <delete-node tree=\"identifier: UniswapV3Pair [910,923]\" />\n  <delete-node tree=\"is: is [924,926]\" />\n  <delete-node tree=\"call_argument [11113,11121]\" />\n  <delete-node tree=\"call_argument [11123,11131]\" />\n  <delete-node tree=\"call_argument [11133,11134]\" />\n  <delete-tree tree=\"modifier_invocation [15366,15370]\" />\n  <delete-node tree=\"affectation_operator: = [17079,17080]\" />\n  <delete-node tree=\"assignment_expression [17071,17100]\" />\n  <delete-node tree=\"identifier: amount1 [17110,17117]\" />\n  <delete-node tree=\"affectation_operator: = [17118,17119]\" />\n  <delete-node tree=\"assignment_expression [17110,17139]\" />\n  <delete-node tree=\"expression_statement [17110,17140]\" />\n  <delete-tree tree=\"variable_declaration_statement [17204,17372]\" />\n  <delete-tree tree=\"expression_statement [17385,17460]\" />\n  <delete-node tree=\"identifier: require [17473,17480]\" />\n  <delete-node tree=\"member_expression: balance0.add(amount0) &lt;= IERC20(token0).balanceOf [17498,17547]\" />\n  <delete-node tree=\"call_expression [17498,17562]\" />\n  <delete-node tree=\"call_argument [17498,17562]\" />\n  <delete-tree tree=\"call_argument [17580,17629]\" />\n  <delete-node tree=\"call_expression [17473,17643]\" />\n  <delete-node tree=\"expression_statement [17473,17644]\" />\n  <delete-tree tree=\"expression_statement [17657,17828]\" />\n  <delete-node tree=\"block_statement [17190,17838]\" />\n  <delete-tree tree=\"modifier_invocation [17989,17993]\" />\n  <delete-node tree=\"affectation_operator: = [18609,18610]\" />\n  <delete-node tree=\"assignment_expression [18601,18631]\" />\n  <delete-node tree=\"expression_statement [18601,18632]\" />\n  <delete-node tree=\"identifier: amount1 [18641,18648]\" />\n  <delete-node tree=\"affectation_operator: = [18649,18650]\" />\n  <delete-node tree=\"assignment_expression [18641,18671]\" />\n  <delete-node tree=\"expression_statement [18641,18672]\" />\n  <delete-node tree=\"if: if [18682,18684]\" />\n  <delete-tree tree=\"binary_expression [18686,18697]\" />\n  <delete-node tree=\"if_statement [18682,18755]\" />\n  <delete-node tree=\"if: if [18764,18766]\" />\n  <delete-tree tree=\"binary_expression [18768,18779]\" />\n  <delete-node tree=\"if_statement [18764,18837]\" />\n  <delete-node tree=\"member_expression: TransferHelper.safeTransfer [18699,18726]\" />\n  <delete-node tree=\"identifier: recipient [18735,18744]\" />\n  <delete-node tree=\"member_expression: TransferHelper.safeTransfer [18781,18808]\" />\n  <delete-node tree=\"identifier: recipient [18817,18826]\" />\n  <delete-node tree=\"identifier: token0 [28075,28081]\" />\n  <delete-node tree=\"tuple_expression [28074,28090]\" />\n  <delete-node tree=\"identifier: token1 [28094,28100]\" />\n  <delete-node tree=\"tuple_expression [28093,28109]\" />\n  <delete-node tree=\"call_expression [28579,28599]\" />\n  <delete-node tree=\"call_expression [28621,28648]\" />\n  <delete-node tree=\"call_expression [28705,28783]\" />\n  <delete-node tree=\"call_argument [28705,28783]\" />\n  <delete-tree tree=\"string_literal [28801,28850]\" />\n  <delete-tree tree=\"variable_declaration_tuple [28016,28051]\" />\n  <delete-node tree=\"affectation_operator: = [28052,28053]\" />\n  <delete-node tree=\"variable_declaration_statement [28016,28110]\" />\n  <delete-node tree=\"member_expression: TransferHelper.safeTransfer [28123,28150]\" />\n  <delete-tree tree=\"call_argument [28151,28159]\" />\n  <delete-node tree=\"call_expression [28123,28189]\" />\n  <delete-node tree=\"expression_statement [28123,28190]\" />\n  <delete-tree tree=\"variable_declaration [28203,28224]\" />\n  <delete-node tree=\"affectation_operator: = [28225,28226]\" />\n  <delete-tree tree=\"call_argument [28253,28266]\" />\n  <delete-node tree=\"call_expression [28227,28267]\" />\n  <delete-node tree=\"variable_declaration_statement [28203,28268]\" />\n  <delete-node tree=\"block_statement [28002,28875]\" />\n</actions>\n"}