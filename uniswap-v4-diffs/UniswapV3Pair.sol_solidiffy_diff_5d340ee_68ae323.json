{"number_of_edits": 162, "edit_script": "<actions>\n  <insert-node tree=\"identifier: UniswapV3Pair [922,935]\" parent=\"contract_declaration [913,27993]\" at=\"0\" />\n  <insert-node tree=\"is: is [936,938]\" parent=\"contract_declaration [913,27993]\" at=\"1\" />\n  <move-tree tree=\"struct_member [16735,16771]\" parent=\"struct_declaration [16562,17246]\" at=\"6\" />\n  <move-tree tree=\"struct_member [16630,16653]\" parent=\"struct_declaration [16562,17246]\" at=\"8\" />\n  <move-tree tree=\"struct_member [16828,16846]\" parent=\"struct_declaration [16562,17246]\" at=\"8\" />\n  <move-tree tree=\"struct_member [16899,16910]\" parent=\"struct_declaration [16562,17246]\" at=\"9\" />\n  <move-tree tree=\"struct_member [17621,17652]\" parent=\"struct_declaration [17348,17938]\" at=\"6\" />\n  <move-tree tree=\"struct_member [17770,17784]\" parent=\"struct_declaration [17348,17938]\" at=\"8\" />\n  <move-tree tree=\"struct_member [18124,18160]\" parent=\"struct_declaration [17944,18590]\" at=\"4\" />\n  <insert-tree tree=\"struct_member [16896,16912]\" parent=\"struct_declaration [16562,17246]\" at=\"5\" />\n  <insert-tree tree=\"struct_member [18302,18339]\" parent=\"struct_declaration [17944,18590]\" at=\"5\" />\n  <insert-node tree=\"return_type_definition [19086,19120]\" parent=\"function_definition [19037,25532]\" at=\"4\" />\n  <insert-tree tree=\"return_type_definition [25803,25837]\" parent=\"function_definition [25652,26489]\" at=\"8\" />\n  <insert-node tree=\"block_statement [12871,13313]\" parent=\"function_body [12345,13319]\" at=\"5\" />\n  <update-node tree=\"type_name: FixedPoint96.uq64x96 [16735,16755]\" label=\"uint128\" />\n  <update-node tree=\"identifier: sqrtPriceLimit [16756,16770]\" label=\"liquidityStart\" />\n  <update-node tree=\"identifier: liquidity [18018,18027]\" label=\"liquidityCurrent\" />\n  <insert-node tree=\"returns: returns [19086,19093]\" parent=\"return_type_definition [19086,19120]\" at=\"0\" />\n  <insert-node tree=\"parameter [19095,19119]\" parent=\"return_type_definition [19086,19120]\" at=\"1\" />\n  <insert-node tree=\"block_statement [24604,25432]\" parent=\"function_body [19121,25532]\" at=\"9\" />\n  <insert-node tree=\"return_statement [26016,26483]\" parent=\"function_body [25838,26489]\" at=\"3\" />\n  <move-tree tree=\"variable_declaration_statement [12871,13005]\" parent=\"block_statement [12871,13313]\" at=\"0\" />\n  <move-tree tree=\"expression_statement [13014,13095]\" parent=\"block_statement [12871,13313]\" at=\"1\" />\n  <move-tree tree=\"expression_statement [13104,13184]\" parent=\"block_statement [12871,13313]\" at=\"2\" />\n  <move-tree tree=\"expression_statement [13193,13273]\" parent=\"block_statement [12871,13313]\" at=\"3\" />\n  <update-node tree=\"type_name: bool [19158,19162]\" label=\"uint256\" />\n  <move-tree tree=\"type_name: bool [19158,19162]\" parent=\"parameter [19095,19119]\" at=\"0\" />\n  <update-node tree=\"identifier: zeroForOne [19163,19173]\" label=\"amountCalculated\" />\n  <move-tree tree=\"identifier: zeroForOne [19163,19173]\" parent=\"parameter [19095,19119]\" at=\"1\" />\n  <insert-node tree=\"binary_expression [19708,19743]\" parent=\"while_statement [19701,23179]\" at=\"1\" />\n  <insert-node tree=\"block_statement [23284,23356]\" parent=\"if_statement [23231,23356]\" at=\"2\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [24170,24187]\" parent=\"if_statement [24166,24325]\" at=\"1\" />\n  <insert-node tree=\"block_statement [24189,24254]\" parent=\"if_statement [24166,24325]\" at=\"2\" />\n  <insert-node tree=\"block_statement [24260,24325]\" parent=\"if_statement [24166,24325]\" at=\"4\" />\n  <move-tree tree=\"variable_declaration_statement [24991,25078]\" parent=\"block_statement [24604,25432]\" at=\"0\" />\n  <move-tree tree=\"expression_statement [25119,25196]\" parent=\"block_statement [24604,25432]\" at=\"1\" />\n  <move-tree tree=\"variable_declaration_statement [25240,25305]\" parent=\"block_statement [24604,25432]\" at=\"2\" />\n  <move-tree tree=\"expression_statement [25314,25535]\" parent=\"block_statement [24604,25432]\" at=\"3\" />\n  <move-tree tree=\"expression_statement [25544,25641]\" parent=\"block_statement [24604,25432]\" at=\"4\" />\n  <insert-node tree=\"return: return [26016,26022]\" parent=\"return_statement [26016,26483]\" at=\"0\" />\n  <move-tree tree=\"call_expression [26384,26796]\" parent=\"return_statement [26016,26483]\" at=\"1\" />\n  <move-tree tree=\"call_struct_argument [19564,19609]\" parent=\"call_argument [19269,19689]\" at=\"4\" />\n  <move-tree tree=\"call_struct_argument [19627,19699]\" parent=\"call_argument [19269,19689]\" at=\"6\" />\n  <update-node tree=\"member_expression: state.amountSpecifiedRemaining != 0 &amp;&amp; state.sqrtPrice._x != params.sqrtPriceLimit._x [20034,20119]\" label=\"state.amountSpecifiedRemaining\" />\n  <move-tree tree=\"member_expression: state.amountSpecifiedRemaining != 0 &amp;&amp; state.sqrtPrice._x != params.sqrtPriceLimit._x [20034,20119]\" parent=\"binary_expression [19708,19743]\" at=\"0\" />\n  <insert-node tree=\"comparison_operator: != [19739,19741]\" parent=\"binary_expression [19708,19743]\" at=\"1\" />\n  <insert-node tree=\"number_literal: 0 [19742,19743]\" parent=\"binary_expression [19708,19743]\" at=\"2\" />\n  <insert-tree tree=\"if_statement [20067,20190]\" parent=\"block_statement [19745,23179]\" at=\"3\" />\n  <update-node tree=\"member_expression: params.slot1Start.liquidityCurrent [23634,23668]\" label=\"params.liquidityStart\" />\n  <update-node tree=\"member_expression: state.liquidity [23672,23687]\" label=\"state.liquidityCurrent\" />\n  <move-tree tree=\"expression_statement [23689,23730]\" parent=\"block_statement [23284,23356]\" at=\"0\" />\n  <move-tree tree=\"expression_statement [24556,24597]\" parent=\"block_statement [24189,24254]\" at=\"0\" />\n  <move-tree tree=\"expression_statement [24611,24652]\" parent=\"block_statement [24260,24325]\" at=\"0\" />\n  <move-tree tree=\"binary_expression [19268,19294]\" parent=\"ternary_expression [24387,24554]\" at=\"0\" />\n  <insert-tree tree=\"binary_expression [20790,20824]\" parent=\"if_statement [20786,21200]\" at=\"1\" />\n  <update-node tree=\"member_expression: state.sqrtPrice._x == step.sqrtPriceNext._x [21779,21822]\" label=\"state.sqrtPrice._x == step.sqrtPriceTarget._x\" />\n  <update-node tree=\"type_name: int256 [24721,24727]\" label=\"uint256\" />\n  <update-node tree=\"type_name: int256 [24738,24744]\" label=\"uint256\" />\n  <insert-node tree=\"type_cast_expression [24433,24464]\" parent=\"tuple_expression [24432,24483]\" at=\"0\" />\n  <insert-node tree=\"identifier: amountCalculated [24466,24482]\" parent=\"tuple_expression [24432,24483]\" at=\"1\" />\n  <insert-node tree=\"identifier: amountCalculated [24503,24519]\" parent=\"tuple_expression [24502,24554]\" at=\"0\" />\n  <insert-node tree=\"type_cast_expression [24521,24553]\" parent=\"tuple_expression [24502,24554]\" at=\"1\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [24656,24673]\" parent=\"ternary_expression [24656,24711]\" at=\"0\" />\n  <move-tree tree=\"call_argument [25501,25510]\" parent=\"call_expression [24725,24791]\" at=\"3\" />\n  <update-node tree=\"member_expression: zeroForOne             ? IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(amountIn, amountOut, params.data)             : IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback [25314,25500]\" label=\"params.zeroForOne                 ? IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(                     -amountIn.toInt256(),                     amountOut.toInt256(),                     params.data                 )                 : IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback\" />\n  <insert-tree tree=\"call_argument [25207,25227]\" parent=\"call_expression [24883,25320]\" at=\"1\" />\n  <update-node tree=\"identifier: liquidity [19840,19849]\" label=\"liquidityCurrent\" />\n  <update-node tree=\"member_expression: params.slot1Start.liquidityCurrent [19851,19885]\" label=\"params.liquidityStart\" />\n  <update-node tree=\"member_expression: step.sqrtPriceNext [20483,20501]\" label=\"step.sqrtPriceTarget\" />\n  <update-node tree=\"member_expression: FixedPoint128.fraction(step.feeAmount, state.liquidity)._x [21640,21698]\" label=\"FixedPoint128.fraction(step.feeAmount, state.liquidityCurrent)._x\" />\n  <insert-tree tree=\"expression_statement [22860,22895]\" parent=\"block_statement [21476,22909]\" at=\"2\" />\n  <update-node tree=\"member_expression: state.liquidity [23714,23729]\" label=\"state.liquidityCurrent\" />\n  <insert-node tree=\"primitive_type: uint256 [24433,24440]\" parent=\"type_cast_expression [24433,24464]\" at=\"0\" />\n  <insert-node tree=\"call_argument [24441,24463]\" parent=\"type_cast_expression [24433,24464]\" at=\"1\" />\n  <insert-node tree=\"primitive_type: uint256 [24521,24528]\" parent=\"type_cast_expression [24521,24553]\" at=\"0\" />\n  <insert-node tree=\"call_argument [24529,24552]\" parent=\"type_cast_expression [24521,24553]\" at=\"1\" />\n  <insert-tree tree=\"unary_expression [25249,25269]\" parent=\"call_argument [25249,25269]\" at=\"0\" />\n  <move-tree tree=\"call_struct_argument [26432,26464]\" parent=\"call_argument [26069,26467]\" at=\"6\" />\n  <move-tree tree=\"call_struct_argument [26552,26572]\" parent=\"call_argument [26069,26467]\" at=\"6\" />\n  <move-tree tree=\"call_struct_argument [26590,26600]\" parent=\"call_argument [26069,26467]\" at=\"7\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [19473,19490]\" parent=\"ternary_expression [19473,19528]\" at=\"0\" />\n  <move-tree tree=\"member_expression: params.amountSpecified [24800,24822]\" parent=\"call_argument [24441,24463]\" at=\"0\" />\n  <insert-node tree=\"unary_expression [24529,24552]\" parent=\"call_argument [24529,24552]\" at=\"0\" />\n  <update-node tree=\"member_expression: balanceBefore.add(uint256(amountIn)) &gt;= IERC20(tokenIn).balanceOf [25552,25617]\" label=\"balanceBefore.add(amountIn) &gt;= IERC20(tokenIn).balanceOf\" />\n  <insert-tree tree=\"call_struct_argument [26184,26222]\" parent=\"call_argument [26069,26467]\" at=\"2\" />\n  <insert-tree tree=\"call_struct_argument [26244,26266]\" parent=\"call_argument [26069,26467]\" at=\"3\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [19992,20009]\" parent=\"call_argument [19992,20009]\" at=\"0\" />\n  <update-node tree=\"member_expression: step.sqrtPriceNext [20974,20992]\" label=\"step.sqrtPriceTarget\" />\n  <move-tree tree=\"member_expression: step.sqrtPriceNext [20974,20992]\" parent=\"call_argument [20497,20517]\" at=\"0\" />\n  <update-node tree=\"member_expression: state.liquidity [21010,21025]\" label=\"state.liquidityCurrent\" />\n  <insert-node tree=\"identifier: amountCalculated [20940,20956]\" parent=\"assignment_expression [20940,20995]\" at=\"0\" />\n  <insert-node tree=\"identifier: amountCalculated [21111,21127]\" parent=\"assignment_expression [21111,21185]\" at=\"0\" />\n  <update-node tree=\"member_expression: state.priceBit &amp;&amp; zeroForOne &amp;&amp; state.sqrtPrice._x == step.sqrtPriceStart._x [23356,23432]\" label=\"state.priceBit &amp;&amp; params.zeroForOne &amp;&amp; state.sqrtPrice._x == step.sqrtPriceStart._x\" />\n  <move-tree tree=\"arithmetic_operator: - [24947,24948]\" parent=\"unary_expression [24529,24552]\" at=\"0\" />\n  <update-node tree=\"member_expression: state.amountSpecifiedRemaining [24949,24979]\" label=\"params.amountSpecified\" />\n  <move-tree tree=\"member_expression: state.amountSpecifiedRemaining [24949,24979]\" parent=\"unary_expression [24529,24552]\" at=\"1\" />\n  <update-node tree=\"member_expression: (step.amountIn + step.feeAmount).toInt256 [21191,21232]\" label=\"step.amountIn.add(step.feeAmount).toInt256\" />\n  <update-node tree=\"member_expression: state.amountCalculated.sub [21277,21303]\" label=\"amountCalculated.add\" />\n  <update-node tree=\"member_expression: state.amountCalculated.add [21471,21497]\" label=\"amountCalculated.add\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [22445,22462]\" parent=\"if_statement [22441,22740]\" at=\"1\" />\n  <insert-node tree=\"block_statement [22464,22599]\" parent=\"if_statement [22441,22740]\" at=\"2\" />\n  <insert-node tree=\"block_statement [22605,22740]\" parent=\"if_statement [22441,22740]\" at=\"4\" />\n  <insert-node tree=\"member_expression: params.zeroForOne [22789,22806]\" parent=\"ternary_expression [22789,22842]\" at=\"0\" />\n  <update-node tree=\"member_expression: step.amountOut.toInt256 [21304,21327]\" label=\"step.amountOut\" />\n  <move-tree tree=\"member_expression: step.amountOut.toInt256 [21304,21327]\" parent=\"call_argument [20980,20994]\" at=\"0\" />\n  <move-tree tree=\"expression_statement [23087,23160]\" parent=\"block_statement [22464,22599]\" at=\"0\" />\n  <move-tree tree=\"expression_statement [22988,23061]\" parent=\"block_statement [22605,22740]\" at=\"0\" />\n  <insert-node tree=\"member_expression: step.amountIn.add [21151,21168]\" parent=\"call_expression [21151,21184]\" at=\"0\" />\n  <insert-node tree=\"call_argument [21169,21183]\" parent=\"call_expression [21151,21184]\" at=\"1\" />\n  <update-node tree=\"member_expression: (step.amountIn + step.feeAmount).toInt256 [21498,21539]\" label=\"step.feeAmount\" />\n  <move-tree tree=\"member_expression: (step.amountIn + step.feeAmount).toInt256 [21498,21539]\" parent=\"call_argument [21169,21183]\" at=\"0\" />\n  <update-node tree=\"member_expression: (zeroForOne ? state.feeGrowthGlobal._x : feeGrowthGlobal0._x) - tickInfo.feeGrowthOutside0._x [22404,22497]\" label=\"(params.zeroForOne ? state.feeGrowthGlobal._x : feeGrowthGlobal0._x) -                             tickInfo.feeGrowthOutside0._x\" />\n  <update-node tree=\"member_expression: (zeroForOne ? feeGrowthGlobal1._x : state.feeGrowthGlobal._x) - tickInfo.feeGrowthOutside1._x [22619,22712]\" label=\"(params.zeroForOne ? feeGrowthGlobal1._x : state.feeGrowthGlobal._x) -                             tickInfo.feeGrowthOutside1._x\" />\n  <update-node tree=\"member_expression: state.liquidity [23087,23102]\" label=\"state.liquidityCurrent\" />\n  <update-node tree=\"member_expression: state.liquidity [22988,23003]\" label=\"state.liquidityCurrent\" />\n  <update-node tree=\"member_expression: state.liquidity.addi [23113,23133]\" label=\"state.liquidityCurrent.subi\" />\n  <update-node tree=\"member_expression: state.liquidity.subi [23014,23034]\" label=\"state.liquidityCurrent.addi\" />\n  <delete-node tree=\"identifier: UniswapV3Pair [922,935]\" />\n  <delete-node tree=\"is: is [936,938]\" />\n  <delete-tree tree=\"struct_member [17063,17080]\" />\n  <delete-tree tree=\"struct_member [17557,17581]\" />\n  <delete-tree tree=\"struct_member [18396,18431]\" />\n  <delete-node tree=\"variable_declaration [19158,19173]\" />\n  <delete-node tree=\"affectation_operator: = [19174,19175]\" />\n  <delete-node tree=\"member_expression: params.sqrtPriceLimit._x &lt; params.slot0Start.sqrtPriceCurrent._x [19176,19240]\" />\n  <delete-node tree=\"variable_declaration_statement [19158,19241]\" />\n  <delete-tree tree=\"variable_declaration [19250,19265]\" />\n  <delete-node tree=\"affectation_operator: = [19266,19267]\" />\n  <delete-node tree=\"variable_declaration_statement [19250,19295]\" />\n  <delete-tree tree=\"call_struct_argument [19527,19546]\" />\n  <delete-node tree=\"identifier: zeroForOne [19774,19784]\" />\n  <delete-node tree=\"identifier: zeroForOne [20368,20378]\" />\n  <delete-tree tree=\"parenthesized_expression [20707,20907]\" />\n  <delete-node tree=\"?: ? [20928,20929]\" />\n  <delete-node tree=\"member_expression: params.sqrtPriceLimit [20930,20951]\" />\n  <delete-node tree=\":: : [20972,20973]\" />\n  <delete-node tree=\"ternary_expression [20707,20992]\" />\n  <delete-node tree=\"identifier: exactInput [21127,21137]\" />\n  <delete-node tree=\"member_expression: state.amountCalculated [21252,21274]\" />\n  <delete-node tree=\"call_expression [21304,21329]\" />\n  <delete-node tree=\"member_expression: state.amountCalculated [21446,21468]\" />\n  <delete-tree tree=\"if_statement [22065,22189]\" />\n  <delete-node tree=\"identifier: zeroForOne [22976,22986]\" />\n  <delete-tree tree=\"expression_statement [23196,23224]\" />\n  <delete-node tree=\"identifier: zeroForOne [23254,23264]\" />\n  <delete-node tree=\"identifier: zeroForOne [24544,24554]\" />\n  <delete-node tree=\"identifier: exactInput [24770,24780]\" />\n  <delete-node tree=\"arithmetic_operator: - [24823,24824]\" />\n  <delete-node tree=\"member_expression: state.amountSpecifiedRemaining [24825,24855]\" />\n  <delete-node tree=\"binary_expression [24800,24855]\" />\n  <delete-node tree=\"member_expression: state.amountCalculated [24857,24879]\" />\n  <delete-node tree=\"member_expression: state.amountCalculated [24900,24922]\" />\n  <delete-node tree=\"member_expression: params.amountSpecified [24924,24946]\" />\n  <delete-node tree=\"binary_expression [24924,24979]\" />\n  <delete-node tree=\"identifier: zeroForOne [25029,25039]\" />\n  <delete-tree tree=\"call_argument [25175,25194]\" />\n  <delete-node tree=\"identifier: amountIn [25512,25520]\" />\n  <delete-tree tree=\"parameter [25942,25964]\" />\n  <delete-tree tree=\"call_struct_argument [26482,26534]\" />\n  <delete-tree tree=\"call_struct_argument [26654,26671]\" />\n  <delete-tree tree=\"expression_statement [26221,26374]\" />\n  <delete-node tree=\"expression_statement [26384,26797]\" />\n</actions>\n"}