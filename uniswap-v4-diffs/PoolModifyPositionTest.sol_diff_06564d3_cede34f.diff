diff --git a/src/test/PoolModifyPositionTest.sol b/src/test/PoolModifyPositionTest.sol
index acdc4737..176d0691 100644
--- a/src/test/PoolModifyPositionTest.sol
+++ b/src/test/PoolModifyPositionTest.sol
@@ -6,14 +6,11 @@ import {IPoolManager} from "../interfaces/IPoolManager.sol";
 import {BalanceDelta} from "../types/BalanceDelta.sol";
 import {PoolKey} from "../types/PoolKey.sol";
 import {PoolTestBase} from "./PoolTestBase.sol";
-import {IHooks} from "../interfaces/IHooks.sol";
-import {Hooks} from "../libraries/Hooks.sol";
 import {Test} from "forge-std/Test.sol";
 import {FeeLibrary} from "../libraries/FeeLibrary.sol";
 
 contract PoolModifyPositionTest is Test, PoolTestBase {
     using CurrencyLibrary for Currency;
-    using Hooks for IHooks;
     using FeeLibrary for uint24;
 
     constructor(IPoolManager _manager) PoolTestBase(_manager) {}
@@ -49,13 +46,13 @@ contract PoolModifyPositionTest is Test, PoolTestBase {
         (,,, int256 delta1) = _fetchBalances(data.key.currency1, data.sender);
 
         if (data.params.liquidityDelta > 0) {
-            assert(delta0 > 0 || delta1 > 0 || data.key.hooks.hasPermissionToNoOp());
-            assert(!(delta0 < 0 || delta1 < 0));
+            assertTrue(delta0 > 0 || delta1 > 0, "No positive delta");
+            assertTrue(!(delta0 < 0 || delta1 < 0), "Negative delta on deposit");
             if (delta0 > 0) _settle(data.key.currency0, data.sender, delta.amount0(), true);
             if (delta1 > 0) _settle(data.key.currency1, data.sender, delta.amount1(), true);
         } else {
-            assert(delta0 < 0 || delta1 < 0 || data.key.hooks.hasPermissionToNoOp());
-            assert(!(delta0 > 0 || delta1 > 0));
+            assertTrue(delta0 < 0 || delta1 < 0 || data.key.fee.hasHookWithdrawFee(), "No negative delta");
+            assertTrue(!(delta0 > 0 || delta1 > 0), "Positive delta on withdrawal");
             if (delta0 < 0) _take(data.key.currency0, data.sender, delta.amount0(), true);
             if (delta1 < 0) _take(data.key.currency1, data.sender, delta.amount1(), true);
         }
