diff --git a/contracts/libraries/SafeMath.sol b/contracts/libraries/SafeMath.sol
index 0067e6d3..4c76735f 100644
--- a/contracts/libraries/SafeMath.sol
+++ b/contracts/libraries/SafeMath.sol
@@ -26,9 +26,11 @@ library SafeMath {
      *
      * - Addition cannot overflow.
      */
-    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {
-        c = a + b;
+    function add(uint256 a, uint256 b) internal pure returns (uint256) {
+        uint256 c = a + b;
         require(c >= a, 'AO');
+
+        return c;
     }
 
     /**
@@ -41,9 +43,11 @@ library SafeMath {
      *
      * - Subtraction cannot overflow.
      */
-    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {
+    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
         require(b <= a, 'SO');
-        c = a - b;
+        uint256 c = a - b;
+
+        return c;
     }
 
     /**
@@ -77,7 +81,7 @@ library SafeMath {
      *
      * - Multiplication cannot overflow.
      */
-    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {
+    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
         // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
         // benefit is lost if 'b' is also tested.
         // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
@@ -85,7 +89,9 @@ library SafeMath {
             return 0;
         }
 
-        c = a * b;
+        uint256 c = a * b;
         require(c / a == b, 'MO');
+
+        return c;
     }
 }
