diff --git a/src/Extsload.sol b/src/Extsload.sol
index 16e5028d..f0eb1072 100644
--- a/src/Extsload.sol
+++ b/src/Extsload.sol
@@ -43,9 +43,11 @@ abstract contract Extsload is IExtsload {
         assembly ("memory-safe") {
             let memptr := mload(0x40)
             let start := memptr
-            // Copy the abi offset of dynamic array and the length of the array to memory.
-            calldatacopy(memptr, 0x04, 0x40)
-            // update memptr to the first location to hold a result
+            // for abi encoding the response - the array will be found at 0x20
+            mstore(memptr, 0x20)
+            // next we store the length of the return array
+            mstore(add(memptr, 0x20), slots.length)
+            // update memptr to the first location to hold an array entry
             memptr := add(memptr, 0x40)
             // A left bit-shift of 5 is equivalent to multiplying by 32 but costs less gas.
             let end := add(memptr, shl(5, slots.length))
