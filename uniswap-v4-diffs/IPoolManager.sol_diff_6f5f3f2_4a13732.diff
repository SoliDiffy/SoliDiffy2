diff --git a/src/interfaces/IPoolManager.sol b/src/interfaces/IPoolManager.sol
index 7e679b63..32e81ad5 100644
--- a/src/interfaces/IPoolManager.sol
+++ b/src/interfaces/IPoolManager.sol
@@ -21,11 +21,10 @@ interface IPoolManager is IFees, IERC6909Claims {
     /// @notice Thrown when trying to interact with a non-initialized pool
     error PoolNotInitialized();
 
-    /// @notice Thrown when lock is called, but a lock is already open
-    error AlreadyLocked();
-
-    /// @notice Thrown when a function is called outside of a lock
-    error ManagerNotLocked();
+    /// @notice Thrown when a function is called by an address that is not the current locker
+    /// @param locker The current locker
+    /// @param currentHook The most recently called hook
+    error LockedBy(address locker, address currentHook);
 
     /// @notice The ERC1155 being deposited is not the Uniswap ERC1155
     error NotPoolManagerToken();
@@ -120,8 +119,14 @@ interface IPoolManager is IFees, IERC6909Claims {
     /// @notice Returns the reserves for a given ERC20 currency
     function reservesOf(Currency currency) external view returns (uint256);
 
-    /// @notice Returns the locker of the pool
-    function getLocker() external view returns (address locker);
+    /// @notice Returns the locker in the ith position of the locker queue.
+    function getLock(uint256 i) external view returns (address locker, address lockCaller);
+
+    /// @notice Returns the length of the lockers array, which is the number of locks open on the PoolManager.
+    function getLockLength() external view returns (uint256 _length);
+
+    /// @notice Returns the most recently called hook.
+    function getCurrentHook() external view returns (IHooks _currentHook);
 
     /// @notice Returns the number of nonzero deltas open on the PoolManager that must be zerod by the close of the initial lock.
     function getLockNonzeroDeltaCount() external view returns (uint256 _nonzeroDeltaCount);
