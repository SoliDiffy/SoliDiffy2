{"number_of_edits": 120, "edit_script": "<actions>\n  <insert-node tree=\"identifier: UniswapV3Pair [610,623]\" parent=\"contract_declaration [601,20430]\" at=\"0\" />\n  <insert-node tree=\"is: is [624,626]\" parent=\"contract_declaration [601,20430]\" at=\"1\" />\n  <insert-tree tree=\"using_directive [677,711]\" parent=\"contract_body [642,20430]\" at=\"1\" />\n  <insert-tree tree=\"using_directive [716,748]\" parent=\"contract_body [642,20430]\" at=\"2\" />\n  <insert-tree tree=\"return_type_definition [9043,9070]\" parent=\"function_definition [8915,10928]\" at=\"8\" />\n  <update-node tree=\"identifier: tick [9309,9313]\" label=\"tickStarting\" />\n  <insert-node tree=\"expression_statement [9988,10069]\" parent=\"function_body [9075,10928]\" at=\"9\" />\n  <insert-node tree=\"assignment_expression [9988,10068]\" parent=\"expression_statement [9988,10069]\" at=\"0\" />\n  <update-node tree=\"identifier: price [9619,9624]\" label=\"priceStarting\" />\n  <update-node tree=\"identifier: tick [9883,9887]\" label=\"tickStarting\" />\n  <move-tree tree=\"identifier: liquidity [10210,10219]\" parent=\"assignment_expression [9988,10068]\" at=\"0\" />\n  <move-tree tree=\"affectation_operator: = [10220,10221]\" parent=\"assignment_expression [9988,10068]\" at=\"1\" />\n  <move-tree tree=\"type_cast_expression [10222,10290]\" parent=\"assignment_expression [9988,10068]\" at=\"2\" />\n  <insert-node tree=\"binary_expression [13589,13672]\" parent=\"variable_declaration_statement [13567,13673]\" at=\"2\" />\n  <update-node tree=\"member_expression: liquidityCurrent.addi(amount0.imul(liquidityCurrent) / reserve0).toUint112 [12208,12282]\" label=\"liquidityCurrent.add\" />\n  <insert-tree tree=\"call_argument [12007,12067]\" parent=\"call_expression [11986,12068]\" at=\"1\" />\n  <update-node tree=\"member_expression: reserve0.addi(amount0).toUint112 [12374,12406]\" label=\"reserve0.add\" />\n  <insert-tree tree=\"call_argument [12171,12178]\" parent=\"call_expression [12158,12179]\" at=\"1\" />\n  <update-node tree=\"member_expression: reserve1.addi(amount1).toUint112 [12429,12461]\" label=\"reserve1.add\" />\n  <insert-tree tree=\"call_argument [12213,12220]\" parent=\"call_expression [12200,12221]\" at=\"1\" />\n  <update-node tree=\"type_name: uint [13809,13813]\" label=\"int112\" />\n  <move-tree tree=\"call_expression [13829,13913]\" parent=\"binary_expression [13589,13672]\" at=\"0\" />\n  <insert-node tree=\"arithmetic_operator: - [13644,13645]\" parent=\"binary_expression [13589,13672]\" at=\"1\" />\n  <insert-node tree=\"type_cast_expression [13646,13672]\" parent=\"binary_expression [13589,13672]\" at=\"2\" />\n  <update-node tree=\"member_expression: token0Deltas[tickLower].iadd(amount0Lower).itoInt112 [15137,15189]\" label=\"token0Deltas[tickLower].add\" />\n  <insert-tree tree=\"call_argument [14902,14914]\" parent=\"call_expression [14874,14915]\" at=\"1\" />\n  <update-node tree=\"member_expression: token0Deltas[tickUpper].isub(amount0Upper).itoInt112 [15344,15396]\" label=\"token0Deltas[tickUpper].sub\" />\n  <insert-tree tree=\"call_argument [15096,15108]\" parent=\"call_expression [15068,15109]\" at=\"1\" />\n  <update-node tree=\"member_expression: TickMath.getPrice(tick)._x [9684,9710]\" label=\"TickMath.getPrice(tickStarting)._x\" />\n  <update-node tree=\"member_expression: price._x [9714,9722]\" label=\"priceStarting._x\" />\n  <update-node tree=\"member_expression: TickMath.getPrice(tick + 1)._x [9779,9809]\" label=\"TickMath.getPrice(tickStarting + 1)._x\" />\n  <update-node tree=\"member_expression: price._x [9812,9820]\" label=\"priceStarting._x\" />\n  <update-node tree=\"member_expression: uint(growthInside.mul(position.liquidityScalar).decode144()).sub [13829,13893]\" label=\"growthInside.smul112\" />\n  <insert-tree tree=\"call_argument [13610,13642]\" parent=\"call_expression [13589,13643]\" at=\"1\" />\n  <insert-node tree=\"primitive_type: int112 [13646,13652]\" parent=\"type_cast_expression [13646,13672]\" at=\"0\" />\n  <move-tree tree=\"call_argument [13894,13912]\" parent=\"type_cast_expression [13646,13672]\" at=\"1\" />\n  <update-node tree=\"member_expression: position.liquidity.addi(liquidityDelta).toUint112 [14256,14305]\" label=\"position.liquidity.add\" />\n  <insert-tree tree=\"call_argument [14027,14041]\" parent=\"call_expression [14004,14042]\" at=\"1\" />\n  <update-node tree=\"member_expression: uint(growthInside.reciprocal().mul(position.liquidity).decode144()).toUint112 [14344,14421]\" label=\"growthInside.reciprocal().mul112(position.liquidity.add(liquidityDelta)).decode\" />\n  <insert-node tree=\"call_expression [15593,15636]\" parent=\"assignment_expression [15583,15636]\" at=\"2\" />\n  <insert-tree tree=\"binary_expression [18310,18373]\" parent=\"variable_declaration_statement [18285,18374]\" at=\"2\" />\n  <insert-node tree=\"member_expression: amount0.add [15593,15604]\" parent=\"call_expression [15593,15636]\" at=\"0\" />\n  <insert-node tree=\"call_argument [15605,15635]\" parent=\"call_expression [15593,15636]\" at=\"1\" />\n  <insert-node tree=\"call_expression [15942,15987]\" parent=\"assignment_expression [15932,15987]\" at=\"2\" />\n  <insert-node tree=\"call_expression [16011,16056]\" parent=\"assignment_expression [16001,16056]\" at=\"2\" />\n  <insert-node tree=\"call_expression [16344,16387]\" parent=\"assignment_expression [16334,16387]\" at=\"2\" />\n  <insert-node tree=\"binary_expression [19160,19191]\" parent=\"variable_declaration_statement [19139,19192]\" at=\"2\" />\n  <insert-node tree=\"identifier: feeLiquidity [13848,13860]\" parent=\"unary_expression [13847,13860]\" at=\"1\" />\n  <move-tree tree=\"call_expression [15882,15939]\" parent=\"call_argument [15605,15635]\" at=\"0\" />\n  <insert-node tree=\"member_expression: amount0.add [15942,15953]\" parent=\"call_expression [15942,15987]\" at=\"0\" />\n  <insert-node tree=\"call_argument [15954,15986]\" parent=\"call_expression [15942,15987]\" at=\"1\" />\n  <insert-node tree=\"member_expression: amount1.add [16011,16022]\" parent=\"call_expression [16011,16056]\" at=\"0\" />\n  <insert-node tree=\"call_argument [16023,16055]\" parent=\"call_expression [16011,16056]\" at=\"1\" />\n  <insert-node tree=\"member_expression: amount1.add [16344,16355]\" parent=\"call_expression [16344,16387]\" at=\"0\" />\n  <insert-node tree=\"call_argument [16356,16386]\" parent=\"call_expression [16344,16387]\" at=\"1\" />\n  <update-node tree=\"member_expression: (uint(reserve0) + amount0InStep).toUint112 [18805,18847]\" label=\"reserve0.add\" />\n  <move-tree tree=\"call_argument [18471,18484]\" parent=\"call_expression [18398,18425]\" at=\"1\" />\n  <update-node tree=\"member_expression: reserve1.sub(amount1OutStep).toUint112 [18874,18912]\" label=\"reserve1.sub\" />\n  <insert-tree tree=\"call_argument [18463,18477]\" parent=\"call_expression [18450,18478]\" at=\"1\" />\n  <update-node tree=\"member_expression: amount0In.sub(amount0InStep).toUint112 [18940,18978]\" label=\"amount0In.sub\" />\n  <insert-tree tree=\"call_argument [18518,18531]\" parent=\"call_expression [18504,18532]\" at=\"1\" />\n  <update-node tree=\"member_expression: (uint(amount1Out) + amount1OutStep).toUint112 [19007,19052]\" label=\"amount1Out.add\" />\n  <insert-tree tree=\"call_argument [18574,18588]\" parent=\"call_expression [18559,18589]\" at=\"1\" />\n  <move-tree tree=\"array_access [19625,19651]\" parent=\"binary_expression [19160,19191]\" at=\"0\" />\n  <insert-node tree=\"arithmetic_operator: * [19187,19188]\" parent=\"binary_expression [19160,19191]\" at=\"1\" />\n  <insert-tree tree=\"unary_expression [19189,19191]\" parent=\"binary_expression [19160,19191]\" at=\"2\" />\n  <insert-node tree=\"call_expression [19322,19362]\" parent=\"assignment_expression [19311,19362]\" at=\"2\" />\n  <update-node tree=\"member_expression: amount0.iadd(amount0Lower.isub(amount0Upper)).itoInt112 [15882,15937]\" label=\"amount0Lower.sub\" />\n  <insert-tree tree=\"call_argument [15622,15634]\" parent=\"call_expression [15605,15635]\" at=\"1\" />\n  <move-tree tree=\"call_expression [16245,16304]\" parent=\"call_argument [15954,15986]\" at=\"0\" />\n  <move-tree tree=\"call_expression [16328,16387]\" parent=\"call_argument [16023,16055]\" at=\"0\" />\n  <move-tree tree=\"call_expression [16675,16732]\" parent=\"call_argument [16356,16386]\" at=\"0\" />\n  <update-node tree=\"member_expression: reserve0.addi(token0Delta).toUint112 [19727,19763]\" label=\"reserve0.add\" />\n  <insert-tree tree=\"call_argument [19281,19292]\" parent=\"call_expression [19268,19293]\" at=\"1\" />\n  <insert-node tree=\"member_expression: reserve1.add [19322,19334]\" parent=\"call_expression [19322,19362]\" at=\"0\" />\n  <insert-node tree=\"call_argument [19335,19361]\" parent=\"call_expression [19322,19362]\" at=\"1\" />\n  <update-node tree=\"member_expression: liquidityCurrent.addi(token0Delta.imul(liquidityCurrent) / reserve0).toUint112 [19884,19962]\" label=\"liquidityCurrent.add\" />\n  <insert-tree tree=\"call_argument [19420,19479]\" parent=\"call_expression [19399,19480]\" at=\"1\" />\n  <update-node tree=\"member_expression: liquidityCurrent.mul [8528,8548]\" label=\"uint(liquidityCurrent).mul\" />\n  <update-node tree=\"member_expression: amount0.iadd(amount0Current.isub(amount0Upper)).itoInt112 [16245,16302]\" label=\"amount0Current.sub\" />\n  <insert-tree tree=\"call_argument [15973,15985]\" parent=\"call_expression [15954,15986]\" at=\"1\" />\n  <update-node tree=\"member_expression: amount1.iadd(amount1Current.isub(amount1Lower)).itoInt112 [16328,16385]\" label=\"amount1Current.sub\" />\n  <insert-tree tree=\"call_argument [16042,16054]\" parent=\"call_expression [16023,16055]\" at=\"1\" />\n  <update-node tree=\"member_expression: amount1.iadd(amount1Upper.isub(amount1Lower)).itoInt112 [16675,16730]\" label=\"amount1Upper.sub\" />\n  <insert-tree tree=\"call_argument [16373,16385]\" parent=\"call_expression [16356,16386]\" at=\"1\" />\n  <insert-node tree=\"identifier: amount0InStep [18121,18134]\" parent=\"binary_expression [18121,18217]\" at=\"0\" />\n  <move-tree tree=\"call_expression [19794,19847]\" parent=\"call_argument [19335,19361]\" at=\"0\" />\n  <insert-node tree=\"augmented_assignment_expression [8605,8645]\" parent=\"expression_statement [8605,8646]\" at=\"0\" />\n  <insert-node tree=\"augmented_assignment_expression [8671,8709]\" parent=\"expression_statement [8671,8710]\" at=\"0\" />\n  <update-node tree=\"member_expression: reserve1.addi(price.smul112(token0Delta)).toUint112 [19794,19845]\" label=\"price.smul112\" />\n  <insert-tree tree=\"call_argument [19349,19360]\" parent=\"call_expression [19335,19361]\" at=\"1\" />\n  <insert-node tree=\"member_expression: position.liquidity [8605,8623]\" parent=\"augmented_assignment_expression [8605,8645]\" at=\"0\" />\n  <insert-node tree=\"affectation_operator: += [8624,8626]\" parent=\"augmented_assignment_expression [8605,8645]\" at=\"1\" />\n  <insert-node tree=\"type_cast_expression [8627,8645]\" parent=\"augmented_assignment_expression [8605,8645]\" at=\"2\" />\n  <insert-node tree=\"identifier: liquidityCurrent [8671,8687]\" parent=\"augmented_assignment_expression [8671,8709]\" at=\"0\" />\n  <update-node tree=\"affectation_operator: = [8996,8997]\" label=\"+=\" />\n  <move-tree tree=\"affectation_operator: = [8996,8997]\" parent=\"augmented_assignment_expression [8671,8709]\" at=\"1\" />\n  <insert-tree tree=\"type_cast_expression [8691,8709]\" parent=\"augmented_assignment_expression [8671,8709]\" at=\"2\" />\n  <insert-node tree=\"primitive_type: uint112 [8627,8634]\" parent=\"type_cast_expression [8627,8645]\" at=\"0\" />\n  <insert-node tree=\"call_argument [8635,8644]\" parent=\"type_cast_expression [8627,8645]\" at=\"1\" />\n  <update-node tree=\"identifier: liquidityCurrent [8889,8905]\" label=\"liquidity\" />\n  <move-tree tree=\"identifier: liquidityCurrent [8889,8905]\" parent=\"call_argument [8635,8644]\" at=\"0\" />\n  <delete-node tree=\"identifier: UniswapV3Pair [610,623]\" />\n  <delete-node tree=\"is: is [624,626]\" />\n  <delete-tree tree=\"using_directive [677,704]\" />\n  <delete-tree tree=\"using_directive [709,733]\" />\n  <delete-tree tree=\"using_directive [738,765]\" />\n  <delete-node tree=\"affectation_operator: = [8906,8907]\" />\n  <delete-tree tree=\"call_expression [8908,8951]\" />\n  <delete-node tree=\"assignment_expression [8889,8951]\" />\n  <delete-node tree=\"member_expression: position.liquidity [8977,8995]\" />\n  <delete-tree tree=\"call_expression [8998,9043]\" />\n  <delete-node tree=\"assignment_expression [8977,9043]\" />\n  <delete-node tree=\"type_name: uint112 [10202,10209]\" />\n  <delete-node tree=\"variable_declaration [10202,10219]\" />\n  <delete-node tree=\"variable_declaration_statement [10202,10291]\" />\n  <delete-tree tree=\"call_expression [14089,14112]\" />\n  <delete-node tree=\"primitive_type: uint [18466,18470]\" />\n  <delete-node tree=\"type_cast_expression [18466,18485]\" />\n  <delete-tree tree=\"call_expression [18661,18780]\" />\n</actions>\n"}