diff --git a/contracts/test/PoolTakeTest.sol b/contracts/test/PoolTakeTest.sol
index 06ceb07c..1cb7b2fe 100644
--- a/contracts/test/PoolTakeTest.sol
+++ b/contracts/test/PoolTakeTest.sol
@@ -1,11 +1,11 @@
 // SPDX-License-Identifier: UNLICENSED
 pragma solidity =0.8.19;
 
-import {Currency, CurrencyLibrary} from "../libraries/CurrencyLibrary.sol";
-import {IERC20Minimal} from "../interfaces/external/IERC20Minimal.sol";
+import {Currency, CurrencyLibrary} from '../libraries/CurrencyLibrary.sol';
+import {IERC20Minimal} from '../interfaces/external/IERC20Minimal.sol';
 
-import {ILockCallback} from "../interfaces/callback/ILockCallback.sol";
-import {IPoolManager} from "../interfaces/IPoolManager.sol";
+import {ILockCallback} from '../interfaces/callback/ILockCallback.sol';
+import {IPoolManager} from '../interfaces/IPoolManager.sol';
 
 contract PoolTakeTest is ILockCallback {
     using CurrencyLibrary for Currency;
@@ -50,7 +50,9 @@ contract PoolTakeTest is ILockCallback {
                 manager.settle{value: uint256(data.amount0)}(data.key.currency0);
             } else {
                 IERC20Minimal(Currency.unwrap(data.key.currency0)).transferFrom(
-                    data.sender, address(manager), uint256(data.amount0)
+                    data.sender,
+                    address(manager),
+                    uint256(data.amount0)
                 );
                 manager.settle(data.key.currency0);
             }
@@ -66,7 +68,9 @@ contract PoolTakeTest is ILockCallback {
                 manager.settle{value: uint256(data.amount1)}(data.key.currency1);
             } else {
                 IERC20Minimal(Currency.unwrap(data.key.currency1)).transferFrom(
-                    data.sender, address(manager), uint256(data.amount1)
+                    data.sender,
+                    address(manager),
+                    uint256(data.amount1)
                 );
                 manager.settle(data.key.currency1);
             }
