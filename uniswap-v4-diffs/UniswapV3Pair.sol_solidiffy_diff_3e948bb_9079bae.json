{"number_of_edits": 81, "edit_script": "<actions>\n  <insert-node tree=\"identifier: UniswapV3Pair [574,587]\" parent=\"contract_declaration [565,25441]\" at=\"0\" />\n  <insert-node tree=\"is: is [588,590]\" parent=\"contract_declaration [565,25441]\" at=\"1\" />\n  <move-tree tree=\"variable_declaration_statement [13126,13216]\" parent=\"function_body [12317,12982]\" at=\"3\" />\n  <move-tree tree=\"variable_declaration_statement [13522,13612]\" parent=\"function_body [13412,19045]\" at=\"6\" />\n  <move-tree tree=\"call_expression [12910,12976]\" parent=\"variable_declaration_statement [12768,12897]\" at=\"2\" />\n  <insert-node tree=\"if_statement [14360,15378]\" parent=\"block_statement [14041,15638]\" at=\"2\" />\n  <update-node tree=\"member_expression: FixedPoint.decode144 [12910,12930]\" label=\"uint(FixedPoint.decode144(growthInside.mul(position.liquidityAdjusted))).sub\" />\n  <move-tree tree=\"call_argument [12948,12974]\" parent=\"call_expression [12800,12896]\" at=\"1\" />\n  <insert-node tree=\"if: if [14360,14362]\" parent=\"if_statement [14360,15378]\" at=\"0\" />\n  <insert-tree tree=\"binary_expression [14364,14394]\" parent=\"if_statement [14360,15378]\" at=\"1\" />\n  <insert-node tree=\"block_statement [14396,15378]\" parent=\"if_statement [14360,15378]\" at=\"2\" />\n  <update-node tree=\"member_expression: position.liquidityAdjusted [12948,12974]\" label=\"position.liquidity\" />\n  <move-tree tree=\"variable_declaration_statement [16472,16710]\" parent=\"block_statement [14396,15378]\" at=\"0\" />\n  <move-tree tree=\"if_statement [16719,17486]\" parent=\"block_statement [14396,15378]\" at=\"1\" />\n  <move-tree tree=\"expression_statement [14526,14661]\" parent=\"block_statement [17194,18207]\" at=\"1\" />\n  <move-tree tree=\"call_expression [16504,16570]\" parent=\"variable_declaration_statement [14467,14600]\" at=\"2\" />\n  <update-node tree=\"member_expression: uint(FixedPoint.encode(position.liquidity)._x / growthInside._x).toUint112 [17634,17708]\" label=\"uint(FixedPoint.decode144(growthInside.reciprocal().mul(position.liquidity))).toUint112\" />\n  <insert-tree tree=\"expression_statement [17736,17803]\" parent=\"block_statement [17270,18067]\" at=\"3\" />\n  <insert-tree tree=\"expression_statement [17816,17883]\" parent=\"block_statement [17270,18067]\" at=\"4\" />\n  <move-tree tree=\"expression_statement [14120,14192]\" parent=\"block_statement [17270,18067]\" at=\"5\" />\n  <move-tree tree=\"expression_statement [14201,14273]\" parent=\"block_statement [17270,18067]\" at=\"6\" />\n  <update-node tree=\"member_expression: FixedPoint.decode144 [16504,16524]\" label=\"uint(FixedPoint.decode144(growthInside.mul(position.liquidityAdjusted))).sub\" />\n  <move-tree tree=\"call_argument [16542,16568]\" parent=\"call_expression [14503,14599]\" at=\"1\" />\n  <insert-tree tree=\"variable_declaration_statement [14797,14830]\" parent=\"block_statement [14711,15368]\" at=\"1\" />\n  <move-tree tree=\"call_expression [13642,13680]\" parent=\"variable_declaration_statement [17284,17372]\" at=\"2\" />\n  <update-node tree=\"member_expression: position.liquidityAdjusted [16542,16568]\" label=\"position.liquidity\" />\n  <move-tree tree=\"block_statement [17071,17241]\" parent=\"if_statement [14925,15192]\" at=\"2\" />\n  <update-node tree=\"member_expression: virtualSupplies[feeVote].addi((int(rootK) - rootKLast) * virtualSupply / rootKLast).toUint112 [14565,14658]\" label=\"virtualSupplies[feeVote].addi(liquidityDelta).toUint112\" />\n  <update-node tree=\"member_expression: feeTo != address(0) &amp;&amp; msg.sender [16923,16956]\" label=\"feeOn &amp;&amp; msg.sender\" />\n  <move-tree tree=\"variable_declaration_statement [16985,17027]\" parent=\"block_statement [14959,15192]\" at=\"0\" />\n  <update-node tree=\"identifier: updateReservesAndVirtualSupply [17408,17438]\" label=\"getValueAtPrice\" />\n  <insert-tree tree=\"call_argument [15319,15324]\" parent=\"call_expression [15303,15353]\" at=\"1\" />\n  <delete-node tree=\"identifier: UniswapV3Pair [574,587]\" />\n  <delete-node tree=\"is: is [588,590]\" />\n  <delete-node tree=\"member_expression: growthInside.mul [12931,12947]\" />\n  <delete-node tree=\"call_expression [12931,12975]\" />\n  <delete-node tree=\"call_argument [12931,12975]\" />\n  <delete-node tree=\"comparison_operator: &gt; [12977,12978]\" />\n  <delete-node tree=\"member_expression: position.liquidity [12979,12997]\" />\n  <delete-node tree=\"binary_expression [12910,12997]\" />\n  <delete-node tree=\"?: ? [12998,12999]\" />\n  <delete-tree tree=\"binary_expression [13012,13099]\" />\n  <delete-node tree=\":: : [13100,13101]\" />\n  <delete-node tree=\"number_literal: 0 [13114,13115]\" />\n  <delete-node tree=\"ternary_expression [12910,13115]\" />\n  <delete-node tree=\"function: function [13363,13371]\" />\n  <delete-node tree=\"identifier: updateReservesAndVirtualSupply [13372,13402]\" />\n  <delete-tree tree=\"parameter [13403,13424]\" />\n  <delete-tree tree=\"parameter [13426,13440]\" />\n  <delete-node tree=\"visibility: internal [13450,13458]\" />\n  <delete-tree tree=\"return_type_definition [13467,13507]\" />\n  <delete-tree tree=\"tuple_expression [13621,13639]\" />\n  <delete-node tree=\"affectation_operator: = [13640,13641]\" />\n  <delete-node tree=\"assignment_expression [13621,13680]\" />\n  <delete-node tree=\"expression_statement [13621,13681]\" />\n  <delete-tree tree=\"variable_declaration_statement [13719,13805]\" />\n  <delete-tree tree=\"expression_statement [13981,14041]\" />\n  <delete-tree tree=\"expression_statement [14050,14110]\" />\n  <delete-tree tree=\"variable_declaration_statement [14383,14426]\" />\n  <delete-tree tree=\"variable_declaration_statement [14435,14517]\" />\n  <delete-tree tree=\"variable_declaration_statement [14671,14765]\" />\n  <delete-tree tree=\"if_statement [14774,14928]\" />\n  <delete-node tree=\"function_body [13512,14934]\" />\n  <delete-node tree=\"function_definition [13363,14934]\" />\n  <delete-node tree=\"member_expression: growthInside.mul [16525,16541]\" />\n  <delete-node tree=\"call_expression [16525,16569]\" />\n  <delete-node tree=\"call_argument [16525,16569]\" />\n  <delete-node tree=\"comparison_operator: &gt; [16571,16572]\" />\n  <delete-node tree=\"member_expression: position.liquidity [16573,16591]\" />\n  <delete-node tree=\"binary_expression [16504,16591]\" />\n  <delete-node tree=\"?: ? [16592,16593]\" />\n  <delete-tree tree=\"binary_expression [16606,16693]\" />\n  <delete-node tree=\":: : [16694,16695]\" />\n  <delete-node tree=\"number_literal: 0 [16708,16709]\" />\n  <delete-node tree=\"ternary_expression [16504,16709]\" />\n  <delete-node tree=\"if: if [17044,17046]\" />\n  <delete-tree tree=\"binary_expression [17048,17069]\" />\n  <delete-node tree=\"if_statement [17044,17241]\" />\n  <delete-node tree=\"block_statement [16967,17255]\" />\n  <delete-tree tree=\"call_argument [17467,17474]\" />\n  <delete-tree tree=\"call_expression [19354,19409]\" />\n</actions>\n"}