diff --git a/src/PoolManager.sol b/src/PoolManager.sol
index d70dce27..131e5a45 100644
--- a/src/PoolManager.sol
+++ b/src/PoolManager.sol
@@ -24,6 +24,7 @@ import {NonZeroDeltaCount} from "./libraries/NonZeroDeltaCount.sol";
 import {PoolGetters} from "./libraries/PoolGetters.sol";
 import {Reserves} from "./libraries/Reserves.sol";
 import {Extsload} from "./Extsload.sol";
+import {Exttload} from "./Exttload.sol";
 
 //  4
 //   44
@@ -73,7 +74,8 @@ import {Extsload} from "./Extsload.sol";
 //                                                  44444   444
 //                                                      444
 /// @notice Holds the state for all pools
-contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claims, Extsload {
+
+contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claims, Extsload, Exttload {
     using PoolIdLibrary for PoolKey;
     using SafeCast for *;
     using Pool for *;
@@ -91,7 +93,7 @@ contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claim
     /// @inheritdoc IPoolManager
     int24 public constant MIN_TICK_SPACING = TickMath.MIN_TICK_SPACING;
 
-    mapping(PoolId id => Pool.State) public pools;
+    mapping(PoolId id => Pool.State) internal pools;
 
     constructor(uint256 controllerGasLimit) ProtocolFees(controllerGasLimit) {}
 
@@ -99,52 +101,6 @@ contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claim
         return pools[id];
     }
 
-    /// @inheritdoc IPoolManager
-    function getSlot0(PoolId id)
-        external
-        view
-        override
-        returns (uint160 sqrtPriceX96, int24 tick, uint24 protocolFee, uint24 lpFee)
-    {
-        Pool.Slot0 memory slot0 = pools[id].slot0;
-
-        return (slot0.sqrtPriceX96, slot0.tick, slot0.protocolFee, slot0.lpFee);
-    }
-
-    /// @inheritdoc IPoolManager
-    function getLiquidity(PoolId id) external view override returns (uint128 liquidity) {
-        return pools[id].liquidity;
-    }
-
-    /// @inheritdoc IPoolManager
-    function getLiquidity(PoolId id, address _owner, int24 tickLower, int24 tickUpper, bytes32 salt)
-        external
-        view
-        override
-        returns (uint128 liquidity)
-    {
-        return pools[id].positions.get(_owner, tickLower, tickUpper, salt).liquidity;
-    }
-
-    function getPosition(PoolId id, address _owner, int24 tickLower, int24 tickUpper, bytes32 salt)
-        external
-        view
-        override
-        returns (Position.Info memory position)
-    {
-        return pools[id].positions.get(_owner, tickLower, tickUpper, salt);
-    }
-
-    /// @inheritdoc IPoolManager
-    function currencyDelta(address caller, Currency currency) external view returns (int256) {
-        return currency.getDelta(caller);
-    }
-
-    /// @inheritdoc IPoolManager
-    function isUnlocked() external view override returns (bool) {
-        return Lock.isUnlocked();
-    }
-
     /// @notice This will revert if the contract is locked
     modifier onlyWhenUnlocked() {
         if (!Lock.isUnlocked()) revert ManagerLocked();
@@ -372,29 +328,4 @@ contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claim
         PoolId id = key.toId();
         pools[id].setLPFee(newDynamicLPFee);
     }
-
-    function getNonzeroDeltaCount() external view returns (uint256 _nonzeroDeltaCount) {
-        return NonZeroDeltaCount.read();
-    }
-
-    function getPoolTickInfo(PoolId id, int24 tick) external view returns (Pool.TickInfo memory) {
-        return pools[id].getPoolTickInfo(tick);
-    }
-
-    function getPoolBitmapInfo(PoolId id, int16 word) external view returns (uint256 tickBitmap) {
-        return pools[id].getPoolBitmapInfo(word);
-    }
-
-    /// @notice Temporary view function. Replaceable by transient EXTSLOAD.
-    function getReserves(Currency currency) external view returns (uint256 balance) {
-        return currency.getReserves();
-    }
-
-    function getFeeGrowthGlobals(PoolId id)
-        external
-        view
-        returns (uint256 feeGrowthGlobal0x128, uint256 feeGrowthGlobal1x128)
-    {
-        return pools[id].getFeeGrowthGlobals();
-    }
 }
