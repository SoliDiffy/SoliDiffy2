{"number_of_edits": 155, "edit_script": "<actions>\n  <insert-node tree=\"identifier: PoolManagerTest [1771,1786]\" parent=\"contract_declaration [1762,54140]\" at=\"0\" />\n  <insert-node tree=\"is: is [1787,1789]\" parent=\"contract_declaration [1762,54140]\" at=\"1\" />\n  <insert-node tree=\"function_definition [46991,48028]\" parent=\"contract_body [1819,54140]\" at=\"75\" />\n  <insert-node tree=\"function: function [46991,46999]\" parent=\"function_definition [46991,48028]\" at=\"0\" />\n  <insert-node tree=\"identifier: test_collectProtocolFees_ERC20_returnsAllFeesIf0IsProvidedAsParameter [47000,47069]\" parent=\"function_definition [46991,48028]\" at=\"1\" />\n  <insert-node tree=\"visibility: public [47072,47078]\" parent=\"function_definition [46991,48028]\" at=\"2\" />\n  <insert-node tree=\"function_body [47079,48028]\" parent=\"function_definition [46991,48028]\" at=\"3\" />\n  <update-node tree=\"type_name: uint24 [2595,2601]\" label=\"uint16\" />\n  <update-node tree=\"type_name: uint16 [35225,35231]\" label=\"uint8\" />\n  <update-node tree=\"identifier: protocolFee0 [35232,35244]\" label=\"protocolFee1\" />\n  <update-node tree=\"type_name: uint16 [35246,35252]\" label=\"uint8\" />\n  <update-node tree=\"identifier: protocolFee1 [35253,35265]\" label=\"protocolFee0\" />\n  <update-node tree=\"type_name: uint24 [43547,43553]\" label=\"uint16\" />\n  <move-tree tree=\"variable_declaration_statement [44454,44515]\" parent=\"function_body [43404,44189]\" at=\"0\" />\n  <move-tree tree=\"variable_declaration_statement [43584,43645]\" parent=\"function_body [44272,45193]\" at=\"0\" />\n  <insert-tree tree=\"variable_declaration_statement [45287,45313]\" parent=\"function_body [45277,45669]\" at=\"0\" />\n  <insert-tree tree=\"variable_declaration_statement [45966,45992]\" parent=\"function_body [45956,46985]\" at=\"0\" />\n  <move-tree tree=\"variable_declaration_statement [47294,47355]\" parent=\"function_body [45956,46985]\" at=\"4\" />\n  <move-tree tree=\"expression_statement [47422,47628]\" parent=\"function_body [45956,46985]\" at=\"7\" />\n  <insert-tree tree=\"variable_declaration_statement [47089,47115]\" parent=\"function_body [47079,48028]\" at=\"0\" />\n  <move-tree tree=\"variable_declaration_statement [47143,47168]\" parent=\"function_body [47079,48028]\" at=\"1\" />\n  <insert-node tree=\"expression_statement [47180,47245]\" parent=\"function_body [47079,48028]\" at=\"2\" />\n  <move-tree tree=\"expression_statement [47256,47284]\" parent=\"function_body [47079,48028]\" at=\"3\" />\n  <move-tree tree=\"variable_declaration_statement [46214,46275]\" parent=\"function_body [47079,48028]\" at=\"4\" />\n  <insert-tree tree=\"expression_statement [47362,47402]\" parent=\"function_body [47079,48028]\" at=\"5\" />\n  <move-tree tree=\"expression_statement [46342,46534]\" parent=\"function_body [47079,48028]\" at=\"6\" />\n  <insert-tree tree=\"expression_statement [47613,47676]\" parent=\"function_body [47079,48028]\" at=\"7\" />\n  <move-tree tree=\"expression_statement [47995,48047]\" parent=\"function_body [47079,48028]\" at=\"8\" />\n  <insert-tree tree=\"expression_statement [47746,47791]\" parent=\"function_body [47079,48028]\" at=\"9\" />\n  <move-tree tree=\"expression_statement [47825,47858]\" parent=\"function_body [47079,48028]\" at=\"10\" />\n  <move-tree tree=\"expression_statement [47867,47921]\" parent=\"function_body [47079,48028]\" at=\"11\" />\n  <insert-tree tree=\"expression_statement [47905,47961]\" parent=\"function_body [47079,48028]\" at=\"12\" />\n  <move-tree tree=\"expression_statement [47638,47690]\" parent=\"function_body [47079,48028]\" at=\"13\" />\n  <insert-tree tree=\"variable_declaration_statement [48118,48144]\" parent=\"function_body [48108,49352]\" at=\"0\" />\n  <move-tree tree=\"variable_declaration_statement [49664,49731]\" parent=\"function_body [48108,49352]\" at=\"5\" />\n  <insert-tree tree=\"variable_declaration_statement [49462,49488]\" parent=\"function_body [49452,50523]\" at=\"0\" />\n  <move-tree tree=\"variable_declaration_statement [48456,48523]\" parent=\"function_body [49452,50523]\" at=\"5\" />\n  <move-tree tree=\"binary_expression [36918,36953]\" parent=\"variable_declaration_statement [36724,36790]\" at=\"2\" />\n  <insert-tree tree=\"type_cast_expression [43603,43626]\" parent=\"variable_declaration_statement [43590,43627]\" at=\"2\" />\n  <insert-tree tree=\"type_cast_expression [43649,43673]\" parent=\"variable_declaration_statement [43636,43674]\" at=\"2\" />\n  <insert-node tree=\"call_expression [47180,47244]\" parent=\"expression_statement [47180,47245]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [35407,35413]\" label=\"uint16\" />\n  <insert-node tree=\"parenthesized_expression [35282,35319]\" parent=\"binary_expression [35252,35319]\" at=\"2\" />\n  <update-node tree=\"member_expression: feeController.setProtocolFeeForPool [35490,35525]\" label=\"feeController.setSwapFeeForPool\" />\n  <update-node tree=\"arithmetic_operator: * [36939,36940]\" label=\"/\" />\n  <update-node tree=\"member_expression: feeController.setProtocolFeeForPool [43693,43728]\" label=\"feeController.setSwapFeeForPool\" />\n  <update-node tree=\"type_name: uint16 [43764,43770]\" label=\"uint8\" />\n  <update-node tree=\"type_name: uint16 [43818,43824]\" label=\"uint8\" />\n  <update-node tree=\"member_expression: feeController.setProtocolFeeForPool [45463,45498]\" label=\"feeController.setSwapFeeForPool\" />\n  <insert-node tree=\"call_argument [45435,45454]\" parent=\"call_expression [45378,45455]\" at=\"2\" />\n  <update-node tree=\"member_expression: feeController.setProtocolFeeForPool [46098,46133]\" label=\"feeController.setSwapFeeForPool\" />\n  <move-tree tree=\"call_argument [47214,47224]\" parent=\"call_expression [46057,46121]\" at=\"1\" />\n  <insert-node tree=\"call_argument [46101,46120]\" parent=\"call_expression [46057,46121]\" at=\"2\" />\n  <insert-node tree=\"member_expression: feeController.setSwapFeeForPool [47180,47211]\" parent=\"call_expression [47180,47244]\" at=\"0\" />\n  <move-tree tree=\"call_argument [46134,46144]\" parent=\"call_expression [47180,47244]\" at=\"1\" />\n  <insert-tree tree=\"call_argument [47224,47243]\" parent=\"call_expression [47180,47244]\" at=\"2\" />\n  <update-node tree=\"member_expression: feeController.setProtocolFeeForPool [48328,48363]\" label=\"feeController.setSwapFeeForPool\" />\n  <move-tree tree=\"call_argument [49572,49588]\" parent=\"call_expression [48359,48429]\" at=\"1\" />\n  <insert-node tree=\"call_argument [48409,48428]\" parent=\"call_expression [48359,48429]\" at=\"2\" />\n  <update-node tree=\"member_expression: feeController.setProtocolFeeForPool [49536,49571]\" label=\"feeController.setSwapFeeForPool\" />\n  <move-tree tree=\"call_argument [48364,48380]\" parent=\"call_expression [49611,49681]\" at=\"1\" />\n  <insert-node tree=\"call_argument [49661,49680]\" parent=\"call_expression [49611,49681]\" at=\"2\" />\n  <update-node tree=\"primitive_type: uint16 [35299,35305]\" label=\"uint8\" />\n  <update-node tree=\"primitive_type: uint16 [35360,35366]\" label=\"uint8\" />\n  <insert-node tree=\"binary_expression [35283,35318]\" parent=\"parenthesized_expression [35282,35319]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [35602,35608]\" label=\"uint16\" />\n  <update-node tree=\"type_name: uint24 [44458,44464]\" label=\"uint16\" />\n  <insert-node tree=\"binary_expression [43688,43708]\" parent=\"parenthesized_expression [43687,43709]\" at=\"0\" />\n  <insert-node tree=\"binary_expression [43714,43734]\" parent=\"parenthesized_expression [43713,43735]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [43588,43594]\" label=\"uint16\" />\n  <update-node tree=\"member_expression: IProtocolFees.ProtocolFeeControllerCallFailedOrInvalidResult.selector [44646,44715]\" label=\"IPoolManager.ProtocolFeeControllerCallFailedOrInvalidResult.selector\" />\n  <update-node tree=\"member_expression: IProtocolFees.ProtocolFeeControllerCallFailedOrInvalidResult.selector [44848,44917]\" label=\"IPoolManager.ProtocolFeeControllerCallFailedOrInvalidResult.selector\" />\n  <update-node tree=\"member_expression: IProtocolFees.ProtocolFeeControllerCallFailedOrInvalidResult.selector [45047,45116]\" label=\"IPoolManager.ProtocolFeeControllerCallFailedOrInvalidResult.selector\" />\n  <update-node tree=\"member_expression: IProtocolFees.ProtocolFeeControllerCallFailedOrInvalidResult.selector [45255,45324]\" label=\"IPoolManager.ProtocolFeeControllerCallFailedOrInvalidResult.selector\" />\n  <insert-node tree=\"type_cast_expression [45435,45454]\" parent=\"call_argument [45435,45454]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [45633,45639]\" label=\"uint16\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [45739,45758]\" label=\"protocolFee\" />\n  <insert-node tree=\"type_cast_expression [46101,46120]\" parent=\"call_argument [46101,46120]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [47298,47304]\" label=\"uint16\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [46311,46330]\" label=\"protocolFee\" />\n  <update-node tree=\"type_name: uint24 [46218,46224]\" label=\"uint16\" />\n  <update-node tree=\"identifier: currency1 [47907,47916]\" label=\"currency0\" />\n  <insert-node tree=\"type_cast_expression [48409,48428]\" parent=\"call_argument [48409,48428]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [49668,49674]\" label=\"uint16\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [48559,48578]\" label=\"protocolFee\" />\n  <insert-node tree=\"type_cast_expression [49661,49680]\" parent=\"call_argument [49661,49680]\" at=\"0\" />\n  <update-node tree=\"type_name: uint24 [48460,48466]\" label=\"uint16\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [49767,49786]\" label=\"protocolFee\" />\n  <update-node tree=\"number_literal: 12 [35453,35455]\" label=\"8\" />\n  <move-tree tree=\"type_cast_expression [35459,35479]\" parent=\"binary_expression [35283,35318]\" at=\"0\" />\n  <insert-node tree=\"bitwise_operator: &amp; [35304,35305]\" parent=\"binary_expression [35283,35318]\" at=\"1\" />\n  <insert-tree tree=\"type_cast_expression [35306,35318]\" parent=\"binary_expression [35283,35318]\" at=\"2\" />\n  <insert-tree tree=\"binary_expression [43688,43696]\" parent=\"binary_expression [43688,43708]\" at=\"0\" />\n  <insert-node tree=\"logical_operator: &amp;&amp; [43697,43699]\" parent=\"binary_expression [43688,43708]\" at=\"1\" />\n  <move-tree tree=\"binary_expression [43877,43888]\" parent=\"binary_expression [43688,43708]\" at=\"2\" />\n  <insert-tree tree=\"binary_expression [43714,43722]\" parent=\"binary_expression [43714,43734]\" at=\"0\" />\n  <insert-node tree=\"logical_operator: &amp;&amp; [43723,43725]\" parent=\"binary_expression [43714,43734]\" at=\"1\" />\n  <move-tree tree=\"binary_expression [43894,43905]\" parent=\"binary_expression [43714,43734]\" at=\"2\" />\n  <insert-node tree=\"primitive_type: uint16 [45435,45441]\" parent=\"type_cast_expression [45435,45454]\" at=\"0\" />\n  <move-tree tree=\"call_argument [45524,45543]\" parent=\"type_cast_expression [45435,45454]\" at=\"1\" />\n  <insert-node tree=\"primitive_type: uint16 [46101,46107]\" parent=\"type_cast_expression [46101,46120]\" at=\"0\" />\n  <move-tree tree=\"call_argument [46146,46165]\" parent=\"type_cast_expression [46101,46120]\" at=\"1\" />\n  <insert-node tree=\"primitive_type: uint16 [48409,48415]\" parent=\"type_cast_expression [48409,48428]\" at=\"0\" />\n  <move-tree tree=\"call_argument [48382,48401]\" parent=\"type_cast_expression [48409,48428]\" at=\"1\" />\n  <insert-node tree=\"primitive_type: uint16 [49661,49667]\" parent=\"type_cast_expression [49661,49680]\" at=\"0\" />\n  <move-tree tree=\"call_argument [49590,49609]\" parent=\"type_cast_expression [49661,49680]\" at=\"1\" />\n  <update-node tree=\"primitive_type: uint24 [35429,35435]\" label=\"uint16\" />\n  <update-node tree=\"primitive_type: uint24 [35459,35465]\" label=\"uint16\" />\n  <update-node tree=\"comparison_operator: &gt; [43882,43883]\" label=\"&lt;\" />\n  <update-node tree=\"number_literal: 2500 [43884,43888]\" label=\"4\" />\n  <update-node tree=\"comparison_operator: &gt; [43899,43900]\" label=\"&lt;\" />\n  <update-node tree=\"number_literal: 2500 [43901,43905]\" label=\"4\" />\n  <update-node tree=\"member_expression: IProtocolFees.ProtocolFeeControllerCallFailedOrInvalidResult.selector [43938,44007]\" label=\"IPoolManager.ProtocolFeeControllerCallFailedOrInvalidResult.selector\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [45524,45543]\" label=\"protocolFee\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [46146,46165]\" label=\"protocolFee\" />\n  <update-node tree=\"boolean_literal: false [47492,47497]\" label=\"true\" />\n  <move-tree tree=\"number_literal: 10000 [47500,47505]\" parent=\"call_argument [46365,46370]\" at=\"0\" />\n  <insert-node tree=\"identifier: SQRT_RATIO_1_2 [46372,46386]\" parent=\"call_argument [46372,46386]\" at=\"0\" />\n  <move-tree tree=\"number_literal: 10000 [46419,46424]\" parent=\"call_argument [47488,47493]\" at=\"0\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [48382,48401]\" label=\"protocolFee\" />\n  <update-node tree=\"identifier: MAX_FEE_BOTH_TOKENS [49590,49609]\" label=\"protocolFee\" />\n  <update-node tree=\"number_literal: 1 [35326,35327]\" label=\"4\" />\n  <insert-node tree=\"member_expression: type(uint8).max [35132,35147]\" parent=\"call_argument [35132,35147]\" at=\"0\" />\n  <update-node tree=\"number_literal: 1 [35387,35388]\" label=\"4\" />\n  <insert-node tree=\"member_expression: type(uint8).max [35203,35218]\" parent=\"call_argument [35203,35218]\" at=\"0\" />\n  <delete-tree tree=\"import_directive [1761,1836]\" />\n  <delete-node tree=\"identifier: PoolManagerTest [1847,1862]\" />\n  <delete-node tree=\"is: is [1863,1865]\" />\n  <delete-tree tree=\"using_directive [2043,2079]\" />\n  <delete-tree tree=\"state_variable_declaration [2801,2859]\" />\n  <delete-node tree=\"number_literal: 2500 [35329,35333]\" />\n  <delete-node tree=\"number_literal: 2500 [35390,35394]\" />\n  <delete-node tree=\"arithmetic_operator: / [36954,36955]\" />\n  <delete-node tree=\"number_literal: 1e4 [36956,36959]\" />\n  <delete-node tree=\"binary_expression [36918,36959]\" />\n  <delete-tree tree=\"call_expression [43778,43808]\" />\n  <delete-tree tree=\"call_expression [43832,43862]\" />\n  <delete-node tree=\"arithmetic_operator: - [47499,47500]\" />\n  <delete-node tree=\"unary_expression [47499,47505]\" />\n  <delete-tree tree=\"binary_expression [47507,47534]\" />\n  <delete-node tree=\"arithmetic_operator: - [46418,46419]\" />\n  <delete-node tree=\"unary_expression [46418,46424]\" />\n  <delete-node tree=\"function: function [47045,47053]\" />\n  <delete-node tree=\"identifier: test_collectProtocolFees_ERC20_returnsAllFeesIf0IsProvidedAsParameter [47054,47123]\" />\n  <delete-node tree=\"visibility: public [47126,47132]\" />\n  <delete-node tree=\"member_expression: feeController.setProtocolFeeForPool [47178,47213]\" />\n  <delete-tree tree=\"call_argument [47226,47245]\" />\n  <delete-node tree=\"call_expression [47178,47246]\" />\n  <delete-node tree=\"expression_statement [47178,47247]\" />\n  <delete-tree tree=\"expression_statement [47364,47412]\" />\n  <delete-tree tree=\"expression_statement [47699,47762]\" />\n  <delete-tree tree=\"expression_statement [47771,47816]\" />\n  <delete-tree tree=\"expression_statement [47930,47986]\" />\n  <delete-node tree=\"function_body [47133,48053]\" />\n  <delete-node tree=\"function_definition [47045,48053]\" />\n</actions>\n"}