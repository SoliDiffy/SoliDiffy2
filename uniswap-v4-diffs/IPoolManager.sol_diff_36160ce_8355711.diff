diff --git a/src/interfaces/IPoolManager.sol b/src/interfaces/IPoolManager.sol
index 72bbe688..ec4c708a 100644
--- a/src/interfaces/IPoolManager.sol
+++ b/src/interfaces/IPoolManager.sol
@@ -59,7 +59,7 @@ interface IPoolManager is IFees, IClaims {
     /// @param tickLower The lower tick of the position
     /// @param tickUpper The upper tick of the position
     /// @param liquidityDelta The amount of liquidity that was added or removed
-    event ModifyLiquidity(
+    event ModifyPosition(
         PoolId indexed id, address indexed sender, int24 tickLower, int24 tickUpper, int256 liquidityDelta
     );
 
@@ -147,7 +147,7 @@ interface IPoolManager is IFees, IClaims {
     /// @return The data returned by the call to `ILockCallback(msg.sender).lockAcquired(data)`
     function lock(address lockTarget, bytes calldata data) external payable returns (bytes memory);
 
-    struct ModifyLiquidityParams {
+    struct ModifyPositionParams {
         // the lower and upper tick of the position
         int24 tickLower;
         int24 tickUpper;
@@ -155,13 +155,8 @@ interface IPoolManager is IFees, IClaims {
         int256 liquidityDelta;
     }
 
-    /// @notice Modify the liquidity for the given pool
-    /// @dev Poke by calling with a zero liquidityDelta
-    /// @param key The pool to modify liquidity in
-    /// @param params The parameters for modifying the liquidity
-    /// @param hookData Any data to pass to the callback, via `ILockCallback(msg.sender).lockAcquired(data)`
-    /// @return delta The balance delta of the liquidity
-    function modifyLiquidity(PoolKey memory key, ModifyLiquidityParams memory params, bytes calldata hookData)
+    /// @notice Modify the position for the given pool
+    function modifyPosition(PoolKey memory key, ModifyPositionParams memory params, bytes calldata hookData)
         external
         returns (BalanceDelta);
 
