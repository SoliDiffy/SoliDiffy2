diff --git a/src/libraries/StateLibrary.sol b/src/libraries/StateLibrary.sol
index ec3d9f3c..6b4f4db5 100644
--- a/src/libraries/StateLibrary.sol
+++ b/src/libraries/StateLibrary.sol
@@ -1,8 +1,9 @@
 // SPDX-License-Identifier: MIT
-pragma solidity ^0.8.21;
+pragma solidity ^0.8.0;
 
 import {PoolId} from "../types/PoolId.sol";
 import {IPoolManager} from "../interfaces/IPoolManager.sol";
+import {Currency} from "../types/Currency.sol";
 import {Position} from "./Position.sol";
 
 library StateLibrary {
@@ -52,7 +53,7 @@ library StateLibrary {
         //   24 bits  |24bits|24bits      |24 bits|160 bits
         // 0x000000   |000bb8|000000      |ffff75 |0000000000000000fe3aa841ba359daa0ea9eff7
         // ---------- | fee  |protocolfee | tick  | sqrtPriceX96
-        assembly ("memory-safe") {
+        assembly {
             // bottom 160 bits of data
             sqrtPriceX96 := and(data, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
             // next 24 bits of data
@@ -89,7 +90,7 @@ library StateLibrary {
 
         // read all 3 words of the TickInfo struct
         bytes memory data = manager.extsload(slot, 3);
-        assembly ("memory-safe") {
+        assembly {
             let firstWord := mload(add(data, 32))
             liquidityNet := sar(128, firstWord)
             liquidityGross := and(firstWord, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
@@ -115,7 +116,7 @@ library StateLibrary {
         bytes32 slot = _getTickInfoSlot(poolId, tick);
 
         bytes32 value = manager.extsload(slot);
-        assembly ("memory-safe") {
+        assembly {
             liquidityNet := sar(128, value)
             liquidityGross := and(value, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
         }
@@ -139,7 +140,7 @@ library StateLibrary {
 
         // offset by 1 word, since the first word is liquidityGross + liquidityNet
         bytes memory data = manager.extsload(bytes32(uint256(slot) + 1), 2);
-        assembly ("memory-safe") {
+        assembly {
             feeGrowthOutside0X128 := mload(add(data, 32))
             feeGrowthOutside1X128 := mload(add(data, 64))
         }
@@ -166,7 +167,7 @@ library StateLibrary {
 
         // read the 2 words of feeGrowthGlobal
         bytes memory data = manager.extsload(slot_feeGrowthGlobal0X128, 2);
-        assembly ("memory-safe") {
+        assembly {
             feeGrowthGlobal0 := mload(add(data, 32))
             feeGrowthGlobal1 := mload(add(data, 64))
         }
@@ -234,7 +235,7 @@ library StateLibrary {
         // read all 3 words of the Position.Info struct
         bytes memory data = manager.extsload(slot, 3);
 
-        assembly ("memory-safe") {
+        assembly {
             liquidity := mload(add(data, 32))
             feeGrowthInside0LastX128 := mload(add(data, 64))
             feeGrowthInside1LastX128 := mload(add(data, 96))
@@ -337,7 +338,7 @@ library StateLibrary {
         return keccak256(abi.encodePacked(int256(tick), ticksMappingSlot));
     }
 
-    function _getPositionInfoSlot(PoolId poolId, bytes32 positionId) internal pure returns (bytes32) {
+    function _getPositionInfoSlot(PoolId poolId, bytes32 positionId) internal pure returns (bytes32 slot) {
         // slot key of Pool.State value: `pools[poolId]`
         bytes32 stateSlot = _getPoolStateSlot(poolId);
 
