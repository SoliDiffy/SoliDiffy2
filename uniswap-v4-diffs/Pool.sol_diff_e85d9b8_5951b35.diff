diff --git a/src/libraries/Pool.sol b/src/libraries/Pool.sol
index d0ecdcbc..c1af788a 100644
--- a/src/libraries/Pool.sol
+++ b/src/libraries/Pool.sol
@@ -505,7 +505,7 @@ library Pool {
     /// @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)
     /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick
     /// @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa
-    /// @return liquidityGrossAfter The total amount of liquidity for all positions that references the tick after the update
+    /// @return liquidityGrossAfter The total amount of  liquidity for all positions that references the tick after the update
     function updateTick(State storage self, int24 tick, int128 liquidityDelta, bool upper)
         internal
         returns (bool flipped, uint128 liquidityGrossAfter)
@@ -536,9 +536,9 @@ library Pool {
                 info.slot,
                 // bitwise OR to pack liquidityGrossAfter and liquidityNet
                 or(
-                    // Put liquidityGrossAfter in the lower bits, clearing out the upper bits
+                    // liquidityGross is in the low bits, upper bits are already 0
                     and(liquidityGrossAfter, 0xffffffffffffffffffffffffffffffff),
-                    // Shift liquidityNet to put it in the upper bits (no need for signextend since we're shifting left)
+                    // shift liquidityNet to take the upper bits and lower bits get filled with 0
                     shl(128, liquidityNet)
                 )
             )
