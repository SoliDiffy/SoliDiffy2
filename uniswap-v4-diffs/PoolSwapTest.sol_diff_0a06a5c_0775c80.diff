diff --git a/contracts/test/PoolSwapTest.sol b/contracts/test/PoolSwapTest.sol
index 51559bad..18a898bf 100644
--- a/contracts/test/PoolSwapTest.sol
+++ b/contracts/test/PoolSwapTest.sol
@@ -1,13 +1,12 @@
 // SPDX-License-Identifier: UNLICENSED
 pragma solidity ^0.8.20;
 
-import {CurrencyLibrary, Currency} from "../types/Currency.sol";
+import {CurrencyLibrary, Currency} from "../libraries/CurrencyLibrary.sol";
 import {IERC20Minimal} from "../interfaces/external/IERC20Minimal.sol";
 
 import {ILockCallback} from "../interfaces/callback/ILockCallback.sol";
 import {IPoolManager} from "../interfaces/IPoolManager.sol";
 import {BalanceDelta} from "../types/BalanceDelta.sol";
-import {PoolKey} from "../types/PoolKey.sol";
 
 contract PoolSwapTest is ILockCallback {
     using CurrencyLibrary for Currency;
@@ -21,7 +20,7 @@ contract PoolSwapTest is ILockCallback {
     struct CallbackData {
         address sender;
         TestSettings testSettings;
-        PoolKey key;
+        IPoolManager.PoolKey key;
         IPoolManager.SwapParams params;
     }
 
@@ -30,11 +29,11 @@ contract PoolSwapTest is ILockCallback {
         bool settleUsingTransfer;
     }
 
-    function swap(PoolKey memory key, IPoolManager.SwapParams memory params, TestSettings memory testSettings)
-        external
-        payable
-        returns (BalanceDelta delta)
-    {
+    function swap(
+        IPoolManager.PoolKey memory key,
+        IPoolManager.SwapParams memory params,
+        TestSettings memory testSettings
+    ) external payable returns (BalanceDelta delta) {
         delta =
             abi.decode(manager.lock(abi.encode(CallbackData(msg.sender, testSettings, key, params))), (BalanceDelta));
 
