diff --git a/test/PoolManager.t.sol b/test/PoolManager.t.sol
index 3dcfdcd1..f458c882 100644
--- a/test/PoolManager.t.sol
+++ b/test/PoolManager.t.sol
@@ -26,9 +26,6 @@ import {PoolLockTest} from "../src/test/PoolLockTest.sol";
 import {PoolId, PoolIdLibrary} from "../src/types/PoolId.sol";
 import {FeeLibrary} from "../src/libraries/FeeLibrary.sol";
 import {Position} from "../src/libraries/Position.sol";
-import {SafeCast} from "../src/libraries/SafeCast.sol";
-import {LiquidityAmounts} from "./utils/LiquidityAmounts.sol";
-import {AmountHelpers} from "./utils/AmountHelpers.sol";
 
 contract PoolManagerTest is Test, Deployers, GasSnapshot {
     using Hooks for IHooks;
@@ -376,20 +373,13 @@ contract PoolManagerTest is Test, Deployers, GasSnapshot {
         snapEnd();
     }
 
-    function test_swap_EOAInitiated(uint256 swapAmount) public {
+    function test_swap_EOAInitiated() public {
         IPoolManager.ModifyLiquidityParams memory liqParams =
             IPoolManager.ModifyLiquidityParams({tickLower: -120, tickUpper: 120, liquidityDelta: 1e18});
         modifyLiquidityRouter.modifyLiquidity(key, liqParams, ZERO_BYTES);
 
-        (uint256 amount0,) = AmountHelpers.getMaxAmountInForPool(manager, Deployers.LIQ_PARAMS, key);
-        // lower bound for precision purposes
-        swapAmount = uint256(bound(swapAmount, 100, amount0));
-
-        IPoolManager.SwapParams memory params = IPoolManager.SwapParams({
-            zeroForOne: true,
-            amountSpecified: SafeCast.toInt256(swapAmount),
-            sqrtPriceLimitX96: SQRT_RATIO_1_2
-        });
+        IPoolManager.SwapParams memory params =
+            IPoolManager.SwapParams({zeroForOne: true, amountSpecified: 100, sqrtPriceLimitX96: SQRT_RATIO_1_2});
 
         PoolSwapTest.TestSettings memory testSettings =
             PoolSwapTest.TestSettings({withdrawTokens: false, settleUsingTransfer: true, currencyAlreadySent: false});
