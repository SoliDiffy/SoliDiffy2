diff --git a/contracts/interfaces/IPoolManager.sol b/contracts/interfaces/IPoolManager.sol
index 6d5eb6b2..edfe09ef 100644
--- a/contracts/interfaces/IPoolManager.sol
+++ b/contracts/interfaces/IPoolManager.sol
@@ -27,10 +27,6 @@ interface IPoolManager is IERC1155 {
     /// @notice Pools must have a positive non-zero tickSpacing passed to #initialize
     error TickSpacingTooSmall();
 
-    event PoolProtocolFeeUpdated(bytes32 poolKey, uint8 protocolFee);
-
-    event ProtocolFeeControllerUpdated(address protocolFeeController);
-
     /// @notice Returns the key for identifying a pool
     struct PoolKey {
         /// @notice The lower token of the pool, sorted numerically
@@ -51,18 +47,8 @@ interface IPoolManager is IERC1155 {
     /// @notice Returns the constant representing the minimum tickSpacing for an initialized pool key
     function MIN_TICK_SPACING() external view returns (int24);
 
-    // @notice Given a token address, returns the protocol fees accrued in that token
-    function protocolFeesAccrued(IERC20Minimal) external view returns (uint256);
-
     /// @notice Get the current value in slot0 of the given pool
-    function getSlot0(PoolKey memory key)
-        external
-        view
-        returns (
-            uint160 sqrtPriceX96,
-            int24 tick,
-            uint8 protocolFee
-        );
+    function getSlot0(PoolKey memory key) external view returns (uint160 sqrtPriceX96, int24 tick);
 
     /// @notice Get the current value of liquidity of the given pool
     function getLiquidity(IPoolManager.PoolKey calldata key) external view returns (uint128 liquidity);
@@ -160,6 +146,4 @@ interface IPoolManager is IERC1155 {
 
     /// @notice Called by the user to pay what is owed
     function settle(IERC20Minimal token) external returns (uint256 paid);
-
-    function setPoolProtocolFee(PoolKey memory key) external;
 }
