diff --git a/test/Hooks.t.sol b/test/Hooks.t.sol
index 54bdcf5f..3e2dd8df 100644
--- a/test/Hooks.t.sol
+++ b/test/Hooks.t.sol
@@ -126,8 +126,8 @@ contract HooksTest is Test, Deployers, GasSnapshot {
     }
 
     // hook validation
-    function testValidateHookAddressNoHooks(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressNoHooks(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
 
         IHooks hookAddr = IHooks(address(preAddr));
         Hooks.validateHookAddress(
@@ -140,8 +140,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -152,11 +151,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeInitialize(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeInitialize(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
 
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_INITIALIZE_FLAG)));
         Hooks.validateHookAddress(
@@ -169,8 +167,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertTrue(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -181,11 +178,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressAfterInitialize(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressAfterInitialize(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
 
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.AFTER_INITIALIZE_FLAG)));
         Hooks.validateHookAddress(
@@ -198,8 +194,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -210,11 +205,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeAndAfterInitialize(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeAndAfterInitialize(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_INITIALIZE_FLAG | Hooks.AFTER_INITIALIZE_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -226,8 +220,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertTrue(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -238,11 +231,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeModify(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeModify(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_MODIFY_POSITION_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -254,8 +246,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -266,11 +257,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressAfterModify(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressAfterModify(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.AFTER_MODIFY_POSITION_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -282,8 +272,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -294,11 +283,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeAndAfterModify(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeAndAfterModify(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr =
             IHooks(address(uint160(preAddr | Hooks.BEFORE_MODIFY_POSITION_FLAG | Hooks.AFTER_MODIFY_POSITION_FLAG)));
         Hooks.validateHookAddress(
@@ -311,8 +299,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -323,11 +310,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeInitializeAfterModify(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeInitializeAfterModify(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr =
             IHooks(address(uint160(preAddr | Hooks.BEFORE_INITIALIZE_FLAG | Hooks.AFTER_MODIFY_POSITION_FLAG)));
         Hooks.validateHookAddress(
@@ -340,8 +326,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertTrue(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -352,11 +337,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeSwap(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeSwap(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_SWAP_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -368,8 +352,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: true,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -380,11 +363,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressAfterSwap(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressAfterSwap(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.AFTER_SWAP_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -396,8 +378,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: true,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -408,11 +389,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertTrue(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeAndAfterSwap(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeAndAfterSwap(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_SWAP_FLAG | Hooks.AFTER_SWAP_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -424,8 +404,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: true,
                 afterSwap: true,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -436,11 +415,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertTrue(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeDonate(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeDonate(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_DONATE_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -452,8 +430,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: true,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -464,11 +441,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertTrue(Hooks.shouldCallBeforeDonate(hookAddr));
         assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressAfterDonate(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressAfterDonate(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.AFTER_DONATE_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -480,8 +456,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: true,
-                noOp: false
+                afterDonate: true
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -492,11 +467,10 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertFalse(Hooks.shouldCallBeforeDonate(hookAddr));
         assertTrue(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressBeforeAndAfterDonate(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
+    function testValidateHookAddressBeforeAndAfterDonate(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
         IHooks hookAddr = IHooks(address(uint160(preAddr | Hooks.BEFORE_DONATE_FLAG | Hooks.AFTER_DONATE_FLAG)));
         Hooks.validateHookAddress(
             hookAddr,
@@ -508,8 +482,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: true,
-                afterDonate: true,
-                noOp: false
+                afterDonate: true
             })
         );
         assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -520,12 +493,11 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
         assertTrue(Hooks.shouldCallBeforeDonate(hookAddr));
         assertTrue(Hooks.shouldCallAfterDonate(hookAddr));
-        assertFalse(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressAllHooks(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
-        IHooks hookAddr = IHooks(address(preAddr | (0xfF8 << 148)));
+    function testValidateHookAddressAllHooks(uint152 addr) public {
+        uint160 preAddr = uint160(uint256(addr));
+        IHooks hookAddr = IHooks(address(uint160(preAddr) | (0xfF << 152)));
         Hooks.validateHookAddress(
             hookAddr,
             Hooks.Calls({
@@ -536,8 +508,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: true,
                 afterSwap: true,
                 beforeDonate: true,
-                afterDonate: true,
-                noOp: true
+                afterDonate: true
             })
         );
         assertTrue(Hooks.shouldCallBeforeInitialize(hookAddr));
@@ -548,49 +519,12 @@ contract HooksTest is Test, Deployers, GasSnapshot {
         assertTrue(Hooks.shouldCallAfterSwap(hookAddr));
         assertTrue(Hooks.shouldCallBeforeDonate(hookAddr));
         assertTrue(Hooks.shouldCallAfterDonate(hookAddr));
-        assertTrue(Hooks.hasPermissionToNoOp(hookAddr));
     }
 
-    function testValidateHookAddressNoOp(uint160 addr) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
-        IHooks hookAddr = IHooks(
-            address(
-                uint160(
-                    preAddr | Hooks.BEFORE_MODIFY_POSITION_FLAG | Hooks.BEFORE_SWAP_FLAG | Hooks.BEFORE_DONATE_FLAG
-                        | Hooks.NO_OP_FLAG
-                )
-            )
-        );
-        Hooks.validateHookAddress(
-            hookAddr,
-            Hooks.Calls({
-                beforeInitialize: false,
-                afterInitialize: false,
-                beforeModifyPosition: true,
-                afterModifyPosition: false,
-                beforeSwap: true,
-                afterSwap: false,
-                beforeDonate: true,
-                afterDonate: false,
-                noOp: true
-            })
-        );
-        assertFalse(Hooks.shouldCallBeforeInitialize(hookAddr));
-        assertFalse(Hooks.shouldCallAfterInitialize(hookAddr));
-        assertTrue(Hooks.shouldCallBeforeModifyPosition(hookAddr));
-        assertFalse(Hooks.shouldCallAfterModifyPosition(hookAddr));
-        assertTrue(Hooks.shouldCallBeforeSwap(hookAddr));
-        assertFalse(Hooks.shouldCallAfterSwap(hookAddr));
-        assertTrue(Hooks.shouldCallBeforeDonate(hookAddr));
-        assertFalse(Hooks.shouldCallAfterDonate(hookAddr));
-        assertTrue(Hooks.hasPermissionToNoOp(hookAddr));
-    }
-
-    function testValidateHookAddressFailsAllHooks(uint160 addr, uint16 mask) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff); // clear the first 9 bits
-        mask = mask & 0xff80; // the last 7 bits are all 0, we just want a 9 bit mask
-        vm.assume(mask != 0xff80); // we want any combination except all hooks
-        IHooks hookAddr = IHooks(address(preAddr | (uint160(mask) << 144)));
+    function testValidateHookAddressFailsAllHooks(uint152 addr, uint8 mask) public {
+        uint160 preAddr = uint160(uint256(addr));
+        vm.assume(mask != 0xff);
+        IHooks hookAddr = IHooks(address(uint160(preAddr) | (uint160(mask) << 152)));
         vm.expectRevert(abi.encodeWithSelector(Hooks.HookAddressNotValid.selector, (address(hookAddr))));
         Hooks.validateHookAddress(
             hookAddr,
@@ -602,17 +536,15 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: true,
                 afterSwap: true,
                 beforeDonate: true,
-                afterDonate: true,
-                noOp: true
+                afterDonate: true
             })
         );
     }
 
-    function testValidateHookAddressFailsNoHooks(uint160 addr, uint16 mask) public {
-        uint160 preAddr = addr & uint160(0x007ffffFfffffffffFffffFFfFFFFFFffFFfFFff);
-        mask = mask & 0xff80; // the last 7 bits are all 0, we just want a 9 bit mask
-        vm.assume(mask != 0); // we want any combination except no hooks
-        IHooks hookAddr = IHooks(address(preAddr | (uint160(mask) << 144)));
+    function testValidateHookAddressFailsNoHooks(uint152 addr, uint8 mask) public {
+        uint160 preAddr = uint160(uint256(addr));
+        vm.assume(mask != 0);
+        IHooks hookAddr = IHooks(address(uint160(preAddr) | (uint160(mask) << 152)));
         vm.expectRevert(abi.encodeWithSelector(Hooks.HookAddressNotValid.selector, (address(hookAddr))));
         Hooks.validateHookAddress(
             hookAddr,
@@ -624,8 +556,7 @@ contract HooksTest is Test, Deployers, GasSnapshot {
                 beforeSwap: false,
                 afterSwap: false,
                 beforeDonate: false,
-                afterDonate: false,
-                noOp: false
+                afterDonate: false
             })
         );
     }
