diff --git a/src/PoolManager.sol b/src/PoolManager.sol
index 3fb55aaf..5cfbecbe 100644
--- a/src/PoolManager.sol
+++ b/src/PoolManager.sol
@@ -276,14 +276,11 @@ contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claim
 
     /// @inheritdoc IPoolManager
     function sync(Currency currency) external onlyWhenUnlocked {
+        CurrencyReserves.requireNotSynced();
         // address(0) is used for the native currency
-        if (currency.isAddressZero()) {
-            // The reserves balance is not used for native settling, so we only need to reset the currency.
-            CurrencyReserves.resetCurrency();
-        } else {
-            uint256 balance = currency.balanceOfSelf();
-            CurrencyReserves.syncCurrencyAndReserves(currency, balance);
-        }
+        if (currency.isAddressZero()) return;
+        uint256 balance = currency.balanceOfSelf();
+        CurrencyReserves.syncCurrencyAndReserves(currency, balance);
     }
 
     /// @inheritdoc IPoolManager
@@ -346,19 +343,17 @@ contract PoolManager is IPoolManager, ProtocolFees, NoDelegateCall, ERC6909Claim
 
     function _settle(address recipient) internal returns (uint256 paid) {
         Currency currency = CurrencyReserves.getSyncedCurrency();
-
-        // if not previously synced, or the syncedCurrency slot has been reset, expects native currency to be settled
+        // if not previously synced, expects native currency to be settled
         if (currency.isAddressZero()) {
             paid = msg.value;
         } else {
             if (msg.value > 0) NonzeroNativeValue.selector.revertWith();
-            // Reserves are guaranteed to be set because currency and reserves are always set together
+            // Reserves are guaranteed to be set, because currency and reserves are always set together
             uint256 reservesBefore = CurrencyReserves.getSyncedReserves();
             uint256 reservesNow = currency.balanceOfSelf();
             paid = reservesNow - reservesBefore;
             CurrencyReserves.resetCurrency();
         }
-
         _accountDelta(currency, paid.toInt128(), recipient);
     }
 
