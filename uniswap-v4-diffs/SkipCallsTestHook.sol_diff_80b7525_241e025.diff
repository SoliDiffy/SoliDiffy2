diff --git a/src/test/SkipCallsTestHook.sol b/src/test/SkipCallsTestHook.sol
index 7d0a8f2c..3c85dac1 100644
--- a/src/test/SkipCallsTestHook.sol
+++ b/src/test/SkipCallsTestHook.sol
@@ -6,7 +6,7 @@ import {BaseTestHooks} from "./BaseTestHooks.sol";
 import {IHooks} from "../interfaces/IHooks.sol";
 import {IPoolManager} from "../interfaces/IPoolManager.sol";
 import {PoolKey} from "../types/PoolKey.sol";
-import {BalanceDelta, BalanceDeltaLibrary} from "../types/BalanceDelta.sol";
+import {BalanceDelta} from "../types/BalanceDelta.sol";
 import {PoolId, PoolIdLibrary} from "../types/PoolId.sol";
 import {IERC20Minimal} from "../interfaces/external/IERC20Minimal.sol";
 import {CurrencyLibrary, Currency} from "../types/Currency.sol";
@@ -64,10 +64,10 @@ contract SkipCallsTestHook is BaseTestHooks, Test {
         IPoolManager.ModifyLiquidityParams calldata params,
         BalanceDelta,
         bytes calldata hookData
-    ) external override returns (bytes4, BalanceDelta) {
+    ) external override returns (bytes4) {
         counter++;
         _addLiquidity(key, params, hookData);
-        return (IHooks.afterAddLiquidity.selector, BalanceDeltaLibrary.ZERO_DELTA);
+        return IHooks.afterAddLiquidity.selector;
     }
 
     function beforeRemoveLiquidity(
@@ -87,20 +87,20 @@ contract SkipCallsTestHook is BaseTestHooks, Test {
         IPoolManager.ModifyLiquidityParams calldata params,
         BalanceDelta,
         bytes calldata hookData
-    ) external override returns (bytes4, BalanceDelta) {
+    ) external override returns (bytes4) {
         counter++;
         _removeLiquidity(key, params, hookData);
-        return (IHooks.afterRemoveLiquidity.selector, BalanceDeltaLibrary.ZERO_DELTA);
+        return IHooks.afterRemoveLiquidity.selector;
     }
 
     function beforeSwap(address, PoolKey calldata key, IPoolManager.SwapParams calldata params, bytes calldata hookData)
         external
         override
-        returns (bytes4, int128)
+        returns (bytes4)
     {
         counter++;
         _swap(key, params, hookData);
-        return (IHooks.beforeSwap.selector, 0);
+        return IHooks.beforeSwap.selector;
     }
 
     function afterSwap(
@@ -109,10 +109,10 @@ contract SkipCallsTestHook is BaseTestHooks, Test {
         IPoolManager.SwapParams calldata params,
         BalanceDelta,
         bytes calldata hookData
-    ) external override returns (bytes4, int128) {
+    ) external override returns (bytes4) {
         counter++;
         _swap(key, params, hookData);
-        return (IHooks.afterSwap.selector, 0);
+        return IHooks.afterSwap.selector;
     }
 
     function beforeDonate(address, PoolKey calldata key, uint256 amt0, uint256 amt1, bytes calldata hookData)
