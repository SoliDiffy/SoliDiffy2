diff --git a/src/interfaces/IPoolManager.sol b/src/interfaces/IPoolManager.sol
index f7b3954a..e5bd89ee 100644
--- a/src/interfaces/IPoolManager.sol
+++ b/src/interfaces/IPoolManager.sol
@@ -36,6 +36,9 @@ interface IPoolManager is IProtocolFees, IERC6909Claims {
     /// or on a pool that does not have a dynamic swap fee.
     error UnauthorizedDynamicSwapFeeUpdate();
 
+    /// @notice Thrown when the call to fetch the protocol fee reverts or returns invalid data.
+    error ProtocolFeeControllerCallFailedOrInvalidResult();
+
     /// @notice Emitted when a new pool is initialized
     /// @param id The abi encoded hash of the pool key struct for the new pool
     /// @param currency0 The first currency of the pool by address sort order
@@ -81,7 +84,7 @@ interface IPoolManager is IProtocolFees, IERC6909Claims {
         uint24 fee
     );
 
-    event ProtocolFeeUpdated(PoolId indexed id, uint24 protocolFee);
+    event ProtocolFeeUpdated(PoolId indexed id, uint16 protocolFee);
 
     /// @notice Returns the constant representing the maximum tickSpacing for an initialized pool key
     function MAX_TICK_SPACING() external view returns (int24);
@@ -93,7 +96,7 @@ interface IPoolManager is IProtocolFees, IERC6909Claims {
     function getSlot0(PoolId id)
         external
         view
-        returns (uint160 sqrtPriceX96, int24 tick, uint24 protocolFee, uint24 swapFee);
+        returns (uint160 sqrtPriceX96, int24 tick, uint16 protocolFee, uint24 swapFee);
 
     /// @notice Get the current value of liquidity of the given pool
     function getLiquidity(PoolId id) external view returns (uint128 liquidity);
