diff --git a/src/test/PoolSwapTest.sol b/src/test/PoolSwapTest.sol
index 960cb6bd..4a06cbf1 100644
--- a/src/test/PoolSwapTest.sol
+++ b/src/test/PoolSwapTest.sol
@@ -69,28 +69,36 @@ contract PoolSwapTest is Test, PoolTestBase {
         assertEq(reserveBefore0, reserveAfter0);
         assertEq(reserveBefore1, reserveAfter1);
 
-        if (data.params.zeroForOne) {
-            if (data.params.amountSpecified > 0) {
-                // exact input, 0 for 1
-                assertEq(deltaAfter0, data.params.amountSpecified);
-                assert(deltaAfter1 < 0);
+        if (!data.key.hooks.hasPermission(Hooks.NO_OP_FLAG)) {
+            if (data.params.zeroForOne) {
+                if (data.params.amountSpecified > 0) {
+                    // exact input, 0 for 1
+                    assertEq(deltaAfter0, data.params.amountSpecified);
+                    assert(deltaAfter1 < 0);
+                } else {
+                    // exact output, 0 for 1
+                    assert(deltaAfter0 > 0);
+                    assertEq(deltaAfter1, data.params.amountSpecified);
+                }
             } else {
-                // exact output, 0 for 1
-                assert(deltaAfter0 > 0);
-                assertEq(deltaAfter1, data.params.amountSpecified);
-            }
-        } else {
-            if (data.params.amountSpecified > 0) {
-                // exact input, 1 for 0
-                assertEq(deltaAfter1, data.params.amountSpecified);
-                assert(deltaAfter0 < 0);
-            } else {
-                // exact output, 1 for 0
-                assert(deltaAfter1 > 0);
-                assertEq(deltaAfter0, data.params.amountSpecified);
+                if (data.params.amountSpecified > 0) {
+                    // exact input, 1 for 0
+                    assertEq(deltaAfter1, data.params.amountSpecified);
+                    assert(deltaAfter0 < 0);
+                } else {
+                    // exact output, 1 for 0
+                    assert(deltaAfter1 > 0);
+                    assertEq(deltaAfter0, data.params.amountSpecified);
+                }
             }
         }
 
+        if (delta == BalanceDeltaLibrary.MAXIMUM_DELTA) {
+            // Check that this hook is allowed to NoOp, then we can return as we dont need to settle
+            assertTrue(data.key.hooks.hasPermission(Hooks.NO_OP_FLAG), "Invalid NoOp returned");
+            return abi.encode(delta);
+        }
+
         if (deltaAfter0 > 0) {
             if (data.testSettings.currencyAlreadySent) {
                 manager.settle(data.key.currency0);
