diff --git a/test/PoolManager.t.sol b/test/PoolManager.t.sol
index 56fa9a12..f2153839 100644
--- a/test/PoolManager.t.sol
+++ b/test/PoolManager.t.sol
@@ -302,62 +302,6 @@ contract PoolManagerTest is Test, Deployers, GasSnapshot {
         modifyLiquidityRouter.modifyLiquidity(key, REMOVE_LIQ_PARAMS, ZERO_BYTES);
     }
 
-    function test_addLiquidity_6909() public {
-        // convert test tokens into ERC6909 claims
-        claimsRouter.deposit(currency0, address(this), 10_000e18);
-        claimsRouter.deposit(currency1, address(this), 10_000e18);
-        assertEq(manager.balanceOf(address(this), currency0.toId()), 10_000e18);
-        assertEq(manager.balanceOf(address(this), currency1.toId()), 10_000e18);
-
-        uint256 currency0BalanceBefore = currency0.balanceOfSelf();
-        uint256 currency1BalanceBefore = currency1.balanceOfSelf();
-        uint256 currency0PMBalanceBefore = currency0.balanceOf(address(manager));
-        uint256 currency1PMBalanceBefore = currency1.balanceOf(address(manager));
-
-        // allow liquidity router to burn our 6909 tokens
-        manager.setOperator(address(modifyLiquidityRouter), true);
-
-        // add liquidity with 6909: settleUsingTransfer=false, withdrawTokens=false (unused)
-        modifyLiquidityRouter.modifyLiquidity(key, LIQ_PARAMS, ZERO_BYTES, false, false);
-
-        assertLt(manager.balanceOf(address(this), currency0.toId()), 10_000e18);
-        assertLt(manager.balanceOf(address(this), currency1.toId()), 10_000e18);
-
-        // ERC20s are unspent
-        assertEq(currency0.balanceOfSelf(), currency0BalanceBefore);
-        assertEq(currency1.balanceOfSelf(), currency1BalanceBefore);
-
-        // PoolManager did not receive net-new ERC20s
-        assertEq(currency0.balanceOf(address(manager)), currency0PMBalanceBefore);
-        assertEq(currency1.balanceOf(address(manager)), currency1PMBalanceBefore);
-    }
-
-    function test_removeLiquidity_6909() public {
-        modifyLiquidityRouter.modifyLiquidity(key, LIQ_PARAMS, ZERO_BYTES);
-
-        assertEq(manager.balanceOf(address(this), currency0.toId()), 0);
-        assertEq(manager.balanceOf(address(this), currency1.toId()), 0);
-
-        uint256 currency0BalanceBefore = currency0.balanceOfSelf();
-        uint256 currency1BalanceBefore = currency1.balanceOfSelf();
-        uint256 currency0PMBalanceBefore = currency0.balanceOf(address(manager));
-        uint256 currency1PMBalanceBefore = currency1.balanceOf(address(manager));
-
-        // remove liquidity as 6909: settleUsingTransfer=false (unused), withdrawTokens=false
-        modifyLiquidityRouter.modifyLiquidity(key, REMOVE_LIQ_PARAMS, ZERO_BYTES, false, false);
-
-        assertTrue(manager.balanceOf(address(this), currency0.toId()) > 0);
-        assertTrue(manager.balanceOf(address(this), currency1.toId()) > 0);
-
-        // ERC20s are unspent
-        assertEq(currency0.balanceOfSelf(), currency0BalanceBefore);
-        assertEq(currency1.balanceOfSelf(), currency1BalanceBefore);
-
-        // PoolManager did lose ERC-20s
-        assertEq(currency0.balanceOf(address(manager)), currency0PMBalanceBefore);
-        assertEq(currency1.balanceOf(address(manager)), currency1PMBalanceBefore);
-    }
-
     function test_addLiquidity_gas() public {
         snapStart("addLiquidity");
         modifyLiquidityRouter.modifyLiquidity(key, LIQ_PARAMS, ZERO_BYTES);
@@ -425,9 +369,7 @@ contract PoolManagerTest is Test, Deployers, GasSnapshot {
                     address(this),
                     key,
                     IPoolManager.ModifyLiquidityParams({tickLower: 0, tickUpper: 60, liquidityDelta: 100}),
-                    ZERO_BYTES,
-                    true,
-                    true
+                    ZERO_BYTES
                 )
             )
         );
