{"number_of_edits": 30, "edit_script": "<actions>\n  <insert-node tree=\"identifier: UniswapV2 [207,216]\" parent=\"contract_declaration [198,6497]\" at=\"0\" />\n  <insert-node tree=\"is: is [217,219]\" parent=\"contract_declaration [198,6497]\" at=\"1\" />\n  <move-tree tree=\"if_statement [4543,5148]\" parent=\"block_statement [4166,4967]\" at=\"7\" />\n  <move-tree tree=\"if_statement [5737,6342]\" parent=\"block_statement [4973,5929]\" at=\"8\" />\n  <move-tree tree=\"expression_statement [5768,5952]\" parent=\"block_statement [4166,4967]\" at=\"5\" />\n  <move-tree tree=\"expression_statement [4574,4758]\" parent=\"block_statement [4973,5929]\" at=\"6\" />\n  <move-tree tree=\"expression_statement [6155,6328]\" parent=\"block_statement [4973,5929]\" at=\"9\" />\n  <insert-node tree=\"assignment_expression [5684,5751]\" parent=\"expression_statement [5684,5752]\" at=\"0\" />\n  <update-node tree=\"identifier: require [6155,6162]\" label=\"fee\" />\n  <move-tree tree=\"identifier: require [6155,6162]\" parent=\"assignment_expression [5684,5751]\" at=\"0\" />\n  <insert-node tree=\"affectation_operator: = [5688,5689]\" parent=\"assignment_expression [5684,5751]\" at=\"1\" />\n  <insert-node tree=\"binary_expression [5690,5751]\" parent=\"assignment_expression [5684,5751]\" at=\"2\" />\n  <move-tree tree=\"call_expression [6184,6264]\" parent=\"binary_expression [5690,5751]\" at=\"0\" />\n  <insert-node tree=\"arithmetic_operator: / [5745,5746]\" parent=\"binary_expression [5690,5751]\" at=\"1\" />\n  <insert-node tree=\"number_literal: 5000 [5747,5751]\" parent=\"binary_expression [5690,5751]\" at=\"2\" />\n  <update-node tree=\"member_expression: amountIn.sub(fee).mul(reserve0 - amountOut).mul(9976) &gt;= amountOut.mul(reserve1).mul [5797,5881]\" label=\"amountIn.mul(reserve1 - amountOut).mul(fee &gt; 0 ? 9976 : 9970) &gt;= amountOut.mul(reserve0).mul\" />\n  <update-node tree=\"string: &quot;UniswapV2: K_VIOLATED&quot; [5910,5933]\" label=\"&quot;UniswapV2: K&quot;\" />\n  <update-node tree=\"member_expression: amountIn.sub(fee).mul(reserve1 - amountOut).mul(9976) &gt;= amountOut.mul(reserve0).mul [4603,4687]\" label=\"amountIn.mul(reserve0 - amountOut).mul(fee &gt; 0 ? 9976 : 9970) &gt;= amountOut.mul(reserve1).mul\" />\n  <update-node tree=\"string: &quot;UniswapV2: K_VIOLATED&quot; [4716,4739]\" label=\"&quot;UniswapV2: K&quot;\" />\n  <update-node tree=\"member_expression: amountIn.mul(reserve0 - amountOut).mul(997) &gt;= amountOut.mul(reserve1).mul [6184,6258]\" label=\"feeRecipient == address(0) ? 0 : uint(amountIn).mul\" />\n  <update-node tree=\"number_literal: 1000 [6259,6263]\" label=\"3\" />\n  <delete-node tree=\"identifier: UniswapV2 [207,216]\" />\n  <delete-node tree=\"is: is [217,219]\" />\n  <delete-node tree=\"else: else [4938,4942]\" />\n  <delete-tree tree=\"block_statement [4943,5148]\" />\n  <delete-node tree=\"call_argument [6184,6264]\" />\n  <delete-tree tree=\"call_argument [6286,6309]\" />\n  <delete-node tree=\"call_expression [6155,6327]\" />\n  <delete-node tree=\"else: else [6132,6136]\" />\n  <delete-node tree=\"block_statement [6137,6342]\" />\n</actions>\n"}