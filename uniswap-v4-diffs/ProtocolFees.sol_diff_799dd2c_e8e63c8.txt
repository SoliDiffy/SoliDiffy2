diff --git a/src/ProtocolFees.sol b/src/ProtocolFees.sol
index fad68281..02c14a55 100644
--- a/src/ProtocolFees.sol
+++ b/src/ProtocolFees.sol
@@ -78,19 +78,13 @@ abstract contract ProtocolFees is IProtocolFees, Owned {
             bytes memory data = abi.encodeCall(IProtocolFeeController.protocolFeeForPool, (key));
             uint256 returnData;
             assembly ("memory-safe") {
-                success := call(gasLimit, toAddress, 0, add(data, 0x20), mload(data), 0, 0)
+                // only load the first 32 bytes of the return data to prevent gas griefing
+                success := call(gasLimit, toAddress, 0, add(data, 0x20), mload(data), 0, 32)
+                // if success is false this wont actually be returned, instead 0 will be returned
+                returnData := mload(0)
 
                 // success if return data size is 32 bytes
-                // only load the return value if it is 32 bytes to prevent gas griefing
                 success := and(success, eq(returndatasize(), 32))
-
-                // load the return data if success is true
-                if success {
-                    let fmp := mload(0x40)
-                    returndatacopy(fmp, 0, returndatasize())
-                    returnData := mload(fmp)
-                    mstore(fmp, 0)
-                }
             }
 
             // Ensure return data does not overflow a uint24 and that the underlying fees are within bounds.
